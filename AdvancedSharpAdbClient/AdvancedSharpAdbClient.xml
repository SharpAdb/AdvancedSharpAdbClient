<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AdvancedSharpAdbClient</name>
    </assembly>
    <members>
        <member name="T:AdvancedSharpAdbClient.AdbClientExtensions">
            <summary>
            Provides extension methods for the <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> interface. Provides overloads
            for commonly used funtions.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbClientExtensions.CreateForward(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData,System.Int32,System.Int32)">
            <summary>
             Creates a port forwarding between a local and a remote port.
            </summary>
            <param name="client">
            An instance of a class that implements the <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> interface.
            </param>
            <param name="device">
            The device to which to forward the connections.
            </param>
            <param name="localPort">
            The local port to forward.
            </param>
            <param name="remotePort">
            The remote port to forward to
            </param>
            <exception cref="T:AdvancedSharpAdbClient.Exceptions.AdbException">
            failed to submit the forward command.
            or
            Device rejected command:  + resp.Message
            </exception>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbClientExtensions.CreateForward(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData,System.Int32,System.String)">
            <summary>
            Forwards a remote Unix socket to a local TCP socket.
            </summary>
            <param name="client">
            An instance of a class that implements the <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> interface.
            </param>
            <param name="device">
            The device to which to forward the connections.
            </param>
            <param name="localPort">
            The local port to forward.
            </param>
            <param name="remoteSocket">
            The remote Unix socket.
            </param>
            <exception cref="T:AdvancedSharpAdbClient.Exceptions.AdbException">
            The client failed to submit the forward command.
            </exception>
            <exception cref="T:AdvancedSharpAdbClient.Exceptions.AdbException">
            The device rejected command. The error message will include the error message provided by the device.
            </exception>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbClientExtensions.ExecuteRemoteCommand(AdvancedSharpAdbClient.IAdvancedAdbClient,System.String,AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.IShellOutputReceiver)">
            <summary>
            Executes a shell command on the remote device
            </summary>
            <param name="client">
            An instance of a class that implements the <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> interface.
            </param>
            <param name="command">The command to execute</param>
            <param name="device">The device to execute on</param>
            <param name="rcvr">The shell output receiver</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbClientExtensions.ExecuteRemoteCommand(AdvancedSharpAdbClient.IAdvancedAdbClient,System.String,AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.IShellOutputReceiver,System.Text.Encoding)">
            <summary>
            Executes a shell command on the remote device
            </summary>
            <param name="client">
            An instance of a class that implements the <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> interface.
            </param>
            <param name="command">The command to execute</param>
            <param name="device">The device to execute on</param>
            <param name="rcvr">The shell output receiver</param>
            <param name="encoding">The encoding to use.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbClientExtensions.Reboot(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Reboots the specified adb socket address.
            </summary>
            <param name="client">
            An instance of a class that implements the <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> interface.
            </param>
            <param name="device">The device.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbClientExtensions.Connect(AdvancedSharpAdbClient.IAdvancedAdbClient,System.Net.IPAddress)">
            <summary>
            Connect to a device via TCP/IP.
            </summary>
            <param name="client">
            An instance of a class that implements the <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> interface.
            </param>
            <param name="address">
            The IP address of the remote device.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbClientExtensions.Connect(AdvancedSharpAdbClient.IAdvancedAdbClient,System.String)">
            <summary>
            Connect to a device via TCP/IP.
            </summary>
            <param name="client">
            An instance of a class that implements the <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> interface.
            </param>
            <param name="host">
            The host address of the remote device.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbClientExtensions.Connect(AdvancedSharpAdbClient.IAdvancedAdbClient,System.Net.IPEndPoint)">
            <summary>
            Connect to a device via TCP/IP.
            </summary>
            <param name="client">
            An instance of a class that implements the <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> interface.
            </param>
            <param name="endpoint">
            The IP endpoint at which the <c>adb</c> server on the device is running.
            </param>
        </member>
        <member name="T:AdvancedSharpAdbClient.AdbCommandLineClient">
            <summary>
            Provides methods for interacting with the <c>adb.exe</c> command line client.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbCommandLineClient.AdbVersionPattern">
            <summary>
            The regex pattern for getting the adb version from the <c>adb version</c> command.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbCommandLineClient.logger">
            <summary>
            The logger to use when logging messages.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbCommandLineClient.#ctor(System.String,Microsoft.Extensions.Logging.ILogger{AdvancedSharpAdbClient.AdbCommandLineClient})">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.AdbCommandLineClient"/> class.
            </summary>
            <param name="adbPath">
            The path to the <c>adb.exe</c> executable.
            </param>
            <param name="logger">
            The logger to use when logging.
            </param>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbCommandLineClient.AdbPath">
            <summary>
            Gets the path to the <c>adb.exe</c> executable.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbCommandLineClient.GetVersion">
            <summary>
            Queries adb for its version number and checks it against <see cref="F:AdvancedSharpAdbClient.AdbServer.RequiredAdbVersion"/>.
            </summary>
            <returns>
            A <see cref="T:System.Version"/> object that contains the version number of the Android Command Line client.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbCommandLineClient.StartServer">
            <summary>
            Starts the adb server by running the <c>adb start-server</c> command.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbCommandLineClient.IsValidAdbFile(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbCommandLineClient.GetVersionFromOutput(System.Collections.Generic.List{System.String})">
            <summary>
            Parses the output of the <c>adb.exe version</c> command and determines the
            adb version.
            </summary>
            <param name="output">
            The output of the <c>adb.exe version</c> command.
            </param>
            <returns>
            A <see cref="T:System.Version"/> object that represents the version of the adb command
            line client.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbCommandLineClient.RunAdbProcess(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Runs the <c>adb.exe</c> process, invoking a specific <paramref name="command"/>,
            and reads the standard output and standard error output.
            </summary>
            <param name="command">
            The <c>adb.exe</c> command to invoke, such as <c>version</c> or <c>start-server</c>.
            </param>
            <param name="errorOutput">
            A list in which to store the standard error output. Each line is added as a new entry.
            This value can be <see langword="null"/> if you are not interested in the standard
            error.
            </param>
            <param name="standardOutput">
            A list in which to store the standard output. Each line is added as a new entry.
            This value can be <see langword="null"/> if you are not interested in the standard
            output.
            </param>
            <remarks>
            <para>
            Use this command only for <c>adb</c> commands that return immediately, such as
            <c>adb version</c>. This operation times out after 5 seconds.
            </para>
            </remarks>
            <exception cref="T:AdvancedSharpAdbClient.Exceptions.AdbException">
            The process exited with an exit code other than <c>0</c>.
            </exception>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbCommandLineClient.RunAdbProcessInner(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            Runs the <c>adb.exe</c> process, invoking a specific <paramref name="command"/>,
            and reads the standard output and standard error output.
            </summary>
            <param name="command">
            The <c>adb.exe</c> command to invoke, such as <c>version</c> or <c>start-server</c>.
            </param>
            <param name="errorOutput">
            A list in which to store the standard error output. Each line is added as a new entry.
            This value can be <see langword="null"/> if you are not interested in the standard
            error.
            </param>
            <param name="standardOutput">
            A list in which to store the standard output. Each line is added as a new entry.
            This value can be <see langword="null"/> if you are not interested in the standard
            output.
            </param>
            <returns>
            The return code of the <c>adb</c> process.
            </returns>
            <remarks>
            <para>
            Use this command only for <c>adb</c> commands that return immediately, such as
            <c>adb version</c>. This operation times out after 5 seconds.
            </para>
            </remarks>
        </member>
        <member name="T:AdvancedSharpAdbClient.AdbCommandLineClientExtensions">
            <summary>
            Provides extension methods for the <see cref="T:AdvancedSharpAdbClient.IAdbCommandLineClient"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbCommandLineClientExtensions.EnsureIsValidAdbFile(AdvancedSharpAdbClient.IAdbCommandLineClient,System.String)">
            <summary>
            Throws an error if the path does not point to a valid instance of <c>adb.exe</c>.
            </summary>
            <param name="client">
            An instance of a class that implements the <see cref="T:AdvancedSharpAdbClient.IAdbCommandLineClient"/> interface.
            </param>
            <param name="adbPath">
            The path to validate.
            </param>
        </member>
        <member name="T:AdvancedSharpAdbClient.AdbResponse">
            <summary>
            An Adb Communication Response
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbResponse.OK">
            <summary>
            Gets a <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> that represents the OK response sent by ADB.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbResponse.IOSuccess">
            <summary>
            Gets or sets a value indicating whether the IO communication was a success.
            </summary>
            <value>
              <see langword="true"/> if successful; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbResponse.Okay">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> is okay.
            </summary>
            <value>
              <see langword="true"/> if okay; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbResponse.Timeout">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> is timeout.
            </summary>
            <value>
              <see langword="true"/> if timeout; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbResponse.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbResponse.FromError(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> class, based on an
            error message returned by adb.
            </summary>
            <param name="message">
            The error message returned by adb.
            </param>
            <returns>
            A new <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> object that represents the error.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbResponse.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current
            <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> object.
            </summary>
            <param name="obj">
            The <see cref="T:System.Object"/> to compare with the current <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> object.
            </param>
            <returns>
            <see langword="true"/> if the specified object is equal to the current object;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbResponse.GetHashCode">
            <summary>
            Gets the hash code for the current <see cref="T:AdvancedSharpAdbClient.AdbResponse"/>.
            </summary>
            <returns>
            A hash code for the current <see cref="T:AdvancedSharpAdbClient.AdbResponse"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbResponse.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:AdvancedSharpAdbClient.AdbResponse"/>.
            </summary>
            <returns>
            <c>OK</c> if the response is an OK response, or <c>Error: {Message}</c> if the
            response indicates an error.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.AdbServer">
            <summary>
            <para>
            Provides methods for interacting with the adb server. The adb server must be running for
            the rest of the <c>Managed.Adb</c> library to work.
            </para>
            <para>
            The adb server is a background process
            that runs on the host machine. Its purpose if to sense the USB ports to know when devices are
            attached/removed, as well as when emulator instances start/stop. The ADB server is really one
            giant multiplexing loop whose purpose is to orchestrate the exchange of data
            between clients and devices.
            </para>
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServer.RequiredAdbVersion">
            <summary>
            The minum version of <c>adb.exe</c> that is supported by this library.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServer.ConnectionRefused">
            <summary>
            The error code that is returned by the <see cref="T:System.Net.Sockets.SocketException"/> when the connection is refused.
            </summary>
            <remarks>
            No connection could be made because the target computer actively refused it.This usually
            results from trying to connect to a service that is inactive on the foreign host—that is,
             one with no server application running.
            </remarks>
            <seealso href="https://msdn.microsoft.com/en-us/library/ms740668.aspx"/>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServer.ConnectionReset">
            <summary>
            The error code that is returned by the <see cref="T:System.Net.Sockets.SocketException"/> when the connection was reset by the peer.
            </summary>
            <remarks>
            An existing connection was forcibly closed by the remote host. This normally results if the peer application on the
            remote host is suddenly stopped, the host is rebooted, the host or remote network interface is disabled, or the remote
            host uses a hard close. This error may also result if a connection was broken due to keep-alive activity detecting
            a failure while one or more operations are in progress.
            </remarks>
            <seealso href="https://msdn.microsoft.com/en-us/library/ms740668.aspx"/>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServer.RestartLock">
            <summary>
            A lock used to ensure only one caller at a time can attempt to restart adb.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServer.cachedAdbPath">
            <summary>
            The path to the adb server. Cached from calls to <see cref="M:AdvancedSharpAdbClient.AdbServer.StartServer(System.String,System.Boolean)"/>. Used when restarting
            the server to figure out where adb is located.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServer.adbCommandLineClientFactory">
            <summary>
            Gets or sets a function that returns a new instance of a class that implements the
            <see cref="T:AdvancedSharpAdbClient.IAdbCommandLineClient"/> interface, that can be used to interact with the
            <c>adb.exe</c> command line client.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbServer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.AdbServer"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbServer.#ctor(AdvancedSharpAdbClient.IAdvancedAdbClient,System.Func{System.String,AdvancedSharpAdbClient.IAdbCommandLineClient})">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.AdbServer"/> class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbServer.Instance">
            <summary>
            Gets or sets the default instance of the <see cref="T:AdvancedSharpAdbClient.IAdbServer"/> interface.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbServer.StartServer(System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbServer.RestartServer">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbServer.GetStatus">
            <inheritdoc/>
        </member>
        <member name="T:AdvancedSharpAdbClient.AdbServerFeatures">
            <summary>
            Lists features which an Android Debug Bridge can support.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServerFeatures.Shell2">
            <summary>
            The server supports the shell protocol.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServerFeatures.Cmd">
            <summary>
            The server supports the <c>cmd</c> command.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServerFeatures.Stat2">
            <summary>
            The server supports the stat2 protocol.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServerFeatures.Libusb">
            <summary>
            The server supports libusb
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbServerFeatures.PushSync">
            <summary>
            The server supports <c>push --sync</c>
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.AdbServerStatus">
            <summary>
            Represents the status of the adb server.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbServerStatus.IsRunning">
            <summary>
            Gets or sets a value indicating whether the server is currently running.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbServerStatus.Version">
            <summary>
            Gets or sets, when the server is running, the version of the server that is running.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbServerStatus.ToString">
            <summary>
            Gets a <see cref="T:System.String"/> that represents the current <see cref="T:AdvancedSharpAdbClient.AdbServerStatus"/>
            object.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:AdvancedSharpAdbClient.AdbServerStatus"/>
            object.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.AdbSocket">
            <summary>
            <para>
            Implements a client for the Android Debug Bridge client-server protocol. Using the client, you
            can send messages to and receive messages from the Android Debug Bridge.
            </para>
            <para>
            The <see cref="T:AdvancedSharpAdbClient.AdbSocket"/> class implements the raw messaging protocol; that is,
            sending and receiving messages. For interacting with the services the Android Debug
            Bridge exposes, use the <see cref="T:AdvancedSharpAdbClient.AdvancedAdbClient"/>.
            </para>
            <para>
            For more information about the protocol that is implemented here, see chapter
            II Protocol Details, section 1. Client &lt;-&gt;Server protocol at
            <see href="https://android.googlesource.com/platform/system/core/+/master/adb/OVERVIEW.TXT"/>.
            </para>
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbSocket.socket">
            <summary>
            The underlying TCP socket that manages the connection with the ADB server.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdbSocket.logger">
            <summary>
            The logger to use when logging messages.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.#ctor(System.Net.EndPoint,Microsoft.Extensions.Logging.ILogger{AdvancedSharpAdbClient.AdbSocket})">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.AdbSocket"/> class.
            </summary>
            <param name="endPoint">
            The <see cref="T:System.Net.EndPoint"/> at which the Android Debug Bridge is listening
            for clients.
            </param>
            <param name="logger">
            The logger to use when logging.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.#ctor(AdvancedSharpAdbClient.ITcpSocket)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.AdbSocket"/> class.
            </summary>
            <param name="socket">
            The <see cref="T:AdvancedSharpAdbClient.ITcpSocket"/> at which the Android Debug Bridge is listening
            for clients.
            </param>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbSocket.ReceiveBufferSize">
            <summary>
            Gets or sets the size of the receive buffer
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbSocket.WriteBufferSize">
            <summary>
            Gets or sets the size of the write buffer.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdbSocket.Connected">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.IsOkay(System.Byte[])">
            <summary>
            Determines whether the specified reply is okay.
            </summary>
            <param name="reply">The reply.</param>
            <returns>
              <see langword="true"/> if the specified reply is okay; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.Reconnect">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.Dispose">
            <summary>
            Releases all resources used by the current instance of the <see cref="T:AdvancedSharpAdbClient.AdbSocket"/>
            class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.Read(System.Byte[])">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.ReadAsync(System.Byte[],System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.SendSyncRequest(AdvancedSharpAdbClient.SyncCommand,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.SendSyncRequest(AdvancedSharpAdbClient.SyncCommand,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.SendSyncRequest(AdvancedSharpAdbClient.SyncCommand,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.ReadSyncResponse">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.ReadString">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.ReadSyncString">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.ReadStringAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.ReadAdbResponse">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.SendAdbRequest(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.Send(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.Send(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.ReadAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.Read(System.Byte[],System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.SetDevice(AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.GetShellStream">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.Write(System.Byte[])">
            <summary>
            Write until all data in "data" is written or the connection fails or times out.
            </summary>
            <param name="data">The data to send.</param>
            <returns>
            Returns <see langword="true"/> if all data was written; otherwise,
            <see langword="false"/>.
            </returns>
            <remarks>
            This uses the default time out value.
            </remarks>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.ReadAdbResponseInner">
            <summary>
            Reads the response from ADB after a command.
            </summary>
            <returns>
            A <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> that represents the response received from ADB.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdbSocket.ReplyToString(System.Byte[])">
            <summary>
            Converts an ADB reply to a string.
            </summary>
            <param name="reply">
            A <see cref="T:System.Byte"/> array that represents the ADB reply.
            </param>
            <returns>
            A <see cref="T:System.String"/> that represents the ADB reply.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.AdvancedAdbClient">
            <summary>
            <para>
                Implements the <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> interface, and allows you to interact with the
                adb server and devices that are connected to that adb server.
            </para>
            <para>
                For example, to fetch a list of all devices that are currently connected to this PC, you can
                call the <see cref="M:AdvancedSharpAdbClient.AdvancedAdbClient.GetDevices"/> method.
            </para>
            <para>
                To run a command on a device, you can use the <see cref="!:ExecuteRemoteCommandAsync(string, DeviceData, IShellOutputReceiver, CancellationToken, int)"/>
                method.
            </para>
            </summary>
            <seealso href="https://github.com/android/platform_system_core/blob/master/adb/SERVICES.TXT">SERVICES.TXT</seealso>
            <seealso href="https://github.com/android/platform_system_core/blob/master/adb/adb_client.c">adb_client.c</seealso>
            <seealso href="https://github.com/android/platform_system_core/blob/master/adb/adb.c">adb.c</seealso>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdvancedAdbClient.AdbServerPort">
            <summary>
            The port at which the Android Debug Bridge server listens by default.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdvancedAdbClient.DefaultPort">
            <summary>
            The default port to use when connecting to a device over TCP/IP.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.AdvancedAdbClient"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.#ctor(System.Net.EndPoint,System.Func{System.Net.EndPoint,AdvancedSharpAdbClient.IAdbSocket})">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.AdvancedAdbClient"/> class.
            </summary>
            <param name="endPoint">
            The <see cref="P:AdvancedSharpAdbClient.AdvancedAdbClient.EndPoint"/> at which the adb server is listening.
            </param>
        </member>
        <member name="F:AdvancedSharpAdbClient.AdvancedAdbClient.Encoding">
            <summary>
            Get or set default encoding
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.AdvancedAdbClient.EndPoint">
            <summary>
            Gets the <see cref="P:AdvancedSharpAdbClient.AdvancedAdbClient.EndPoint"/> at which the adb server is listening.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.FormAdbRequest(System.String)">
            <summary>
            Create an ASCII string preceded by four hex digits. The opening "####"
            is the length of the rest of the string, encoded as ASCII hex(case
            doesn't matter).
            </summary>
            <param name="req">The request to form.
            </param>
            <returns>
            An array containing <c>####req</c>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.CreateAdbForwardRequest(System.String,System.Int32)">
            <summary>
            Creates the adb forward request.
            </summary>
            <param name="address">The address.</param>
            <param name="port">The port.</param>
            <returns>
            This returns an array containing <c>"####tcp:{port}:{addStr}"</c>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.GetAdbVersion">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.KillAdb">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.GetDevices">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.CreateReverseForward(AdvancedSharpAdbClient.DeviceData,System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.CreateForward(AdvancedSharpAdbClient.DeviceData,System.String,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.CreateForward(AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.ForwardSpec,AdvancedSharpAdbClient.ForwardSpec,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.RemoveForward(AdvancedSharpAdbClient.DeviceData,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.RemoveAllForwards(AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.ListForward(AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.ExecuteRemoteCommandAsync(System.String,AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.IShellOutputReceiver,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.ExecuteRemoteCommandAsync(System.String,AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.IShellOutputReceiver,System.Text.Encoding,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.CreateRefreshableFramebuffer(AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.GetFrameBufferAsync(AdvancedSharpAdbClient.DeviceData,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.RunLogServiceAsync(AdvancedSharpAdbClient.DeviceData,System.Action{AdvancedSharpAdbClient.Logs.LogEntry},System.Threading.CancellationToken,AdvancedSharpAdbClient.Logs.LogId[])">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Reboot(System.String,AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Connect(System.Net.DnsEndPoint)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Root(AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Unroot(AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Root(System.String,AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.GetFeatureSet(AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Install(AdvancedSharpAdbClient.DeviceData,System.IO.Stream,System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.DumpScreen(AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Click(AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.Cords)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Click(AdvancedSharpAdbClient.DeviceData,System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Swipe(AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.Element,AdvancedSharpAdbClient.Element,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Swipe(AdvancedSharpAdbClient.DeviceData,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.FindElement(AdvancedSharpAdbClient.DeviceData,System.String,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.FindElements(AdvancedSharpAdbClient.DeviceData,System.String,System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.SendKeyEvent(AdvancedSharpAdbClient.DeviceData,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.SendText(AdvancedSharpAdbClient.DeviceData,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.ClearInput(AdvancedSharpAdbClient.DeviceData,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.StartApp(AdvancedSharpAdbClient.DeviceData,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.StopApp(AdvancedSharpAdbClient.DeviceData,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.BackBtn(AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.HomeBtn(AdvancedSharpAdbClient.DeviceData)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.SetEncoding(System.Text.Encoding)">
            <summary>
            Sets default encoding (default - UTF8)
            </summary>
            <param name="encoding"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.Disconnect(System.Net.DnsEndPoint)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.AdvancedAdbClient.EnsureDevice(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the <paramref name="device"/>
            parameter is <see langword="null"/>, and a <see cref="T:System.ArgumentOutOfRangeException"/>
            if <paramref name="device"/> does not have a valid serial number.
            </summary>
            <param name="device">
            A <see cref="T:AdvancedSharpAdbClient.DeviceData"/> object to validate.
            </param>
        </member>
        <member name="T:AdvancedSharpAdbClient.ColorData">
            <summary>
            <para>
            Contains information about a color element. Information about each pixel on the screen
            is contained in a byte array (for example, a 4-byte array for 32-bit color depths), and
            a certain number of bits are reserved for each color.
            </para>
            <para>
            For example, in a 24-bit RGB structure, the first byte contains the red color,
            the next byte the green color and the last byte the blue color.
            </para>
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ColorData.Length">
            <summary>
            Gets or sets the number of bits that contain information for this color.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ColorData.Offset">
            <summary>
            Gets or sets the offset, in bits, within the byte array for a pixel, at which the
            bytes that contain information for this color are stored.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Cords">
            <summary>
            Contains element coordinates
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Cords.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Cords"/> class.
            </summary>
            <param name="cx"></param>
            <param name="cy"></param>
        </member>
        <member name="P:AdvancedSharpAdbClient.Cords.x">
            <summary>
            Gets or sets the horizontal "X" coordinate
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Cords.y">
            <summary>
            Gets or sets the vertical "Y" coordinate
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess">
            <summary>
            Represents a process running on an Android device.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.ProcessId">
            <summary>
            Gets or sets the Process ID number.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.ParentProcessId">
            <summary>
            Gets or sets the parent Process ID number.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.VirtualSize">
            <summary>
            Gets or sets total VM size in bytes.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.ResidentSetSize">
            <summary>
            Gets or sets the process resident set size.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.WChan">
            <summary>
            Gets or sets the memory address of the event the process is waiting for
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.Name">
            <summary>
            Gets or sets the name of the process, including arguments, if any.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.State">
            <summary>
            Gets or sets the state of the process.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.Parse(System.String,System.Boolean)">
            <summary>
            Creates a <see cref="T:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess"/> from it <see cref="T:System.String"/> representation.
            </summary>
            <param name="line">
            A <see cref="T:System.String"/> which represents a <see cref="T:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess"/>.
            </param>
            <param name="cmdLinePrefix">
            A value indicating whether the output of <c>/proc/{pid}/stat</c> is prefixed with <c>/proc/{pid}/cmdline</c> or not.
            Becuase <c>stat</c> does not contain the full process name, this can be useful.
            </param>
            <returns>
            The equivalent <see cref="T:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.ToString">
            <summary>
            Gets a <see cref="T:System.String"/> that represents this <see cref="T:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess"/>,
            in the format of "<see cref="P:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.Name"/> (<see cref="P:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.ProcessId"/>)".
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this <see cref="T:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.AndroidProcess.IndexOf(System.Collections.Generic.List{System.String},System.String[])">
            <summary>
            Gets the index of the first value of a set of values that is part of a list.
            </summary>
            <param name="list">
            The list in which to search for the value.
            </param>
            <param name="values">
            The values to search for.
            </param>
            <returns>
            The index of the first element in <paramref name="values"/> that is present in the list, or
            <c>-1</c>.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState">
            <summary>
            Represents the state of a process running on an Android device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState.Unknown">
            <summary>
            The process state is unknown.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState.D">
            <summary>
            Uninterruptible sleep (usually IO)
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState.R">
            <summary>
            Running or runnable (on run queue)
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState.S">
            <summary>
            Interruptible sleep (waiting for an event to complete)
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState.T">
            <summary>
            Stopped, either by a job control signal or because it is being traced.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState.W">
            <summary>
            paging (not valid since the 2.6.xx kernel)
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState.X">
            <summary>
            dead (should never be seen)
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState.Z">
            <summary>
            Defunct ("zombie") process, terminated but not reaped by its parent.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState.K">
            <summary>
            Wakekill
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.AndroidProcessState.P">
            <summary>
            Parked
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.DeviceExtensions">
            <summary>
            Provides extension methods for the <see cref="T:AdvancedSharpAdbClient.DeviceData"/> class, allowing you to run
            commands directory against a <see cref="T:AdvancedSharpAdbClient.DeviceData"/> object.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.DeviceExtensions.ExecuteShellCommand(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData,System.String,AdvancedSharpAdbClient.IShellOutputReceiver)">
            <summary>
            Executes a shell command on the device.
            </summary>
            <param name="client">
            The <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> to use when executing the command.
            </param>
            <param name="device">
            The device on which to run the command.
            </param>
            <param name="command">
            The command to execute.
            </param>
            <param name="receiver">
            Optionally, a <see cref="T:AdvancedSharpAdbClient.IShellOutputReceiver"/> that processes the command output.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.DeviceExtensions.Stat(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData,System.String)">
            <summary>
            Gets the file statistics of a given file.
            </summary>
            <param name="client">
            The <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> to use when executing the command.
            </param>
            <param name="device">
            The device on which to look for the file.
            </param>
            <param name="path">
            The path to the file.
            </param>
            <returns>
            A <see cref="T:AdvancedSharpAdbClient.FileStatistics"/> object that represents the file.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.DeviceExtensions.GetProperties(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Gets the properties of a device.
            </summary>
            <param name="client">
            The connection to the adb server.
            </param>
            <param name="device">
            The device for which to list the properties.
            </param>
            <returns>
            A dictionary containing the properties of the device, and their values.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.DeviceExtensions.GetEnvironmentVariables(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Gets the environment variables currently defined on a device.
            </summary>
            <param name="client">
            The connection to the adb server.
            </param>
            <param name="device">
            The device for which to list the environment variables.
            </param>
            <returns>
            A dictionary containing the environment variables of the device, and their values.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.DeviceExtensions.UninstallPackage(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData,System.String)">
            <summary>
            Uninstalls a package from the device.
            </summary>
            <param name="client">
            The connection to the adb server.
            </param>
            <param name="device">
            The device on which to uninstall the package.
            </param>
            <param name="packageName">
            The name of the package to uninstall.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.DeviceExtensions.GetPackageVersion(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData,System.String)">
            <summary>
            Requests the version information from the device.
            </summary>
            <param name="device">
            The device on which to uninstall the package.
            </param>
            <param name="packageName">
            The name of the package from which to get the application version.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.DeviceExtensions.ListProcesses(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Lists all processes running on the device.
            </summary>
            <param name="client">
            A connection to ADB.
            </param>
            <param name="device">
            The device on which to list the processes that are running.
            </param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that will iterate over all
            processes that are currently running on the device.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.GetPropReceiver">
            <summary>
            Parses the output of the <c>getprop</c> command, which lists all properties of an
            Android device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.GetPropReceiver.GetpropCommand">
            <summary>
            The path to the <c>getprop</c> executable to run on the device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.GetPropReceiver.GetpropRegex">
            <summary>
            A regular expression which can be used to parse the getprop output.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.GetPropReceiver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceCommands.GetPropReceiver"/> class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.GetPropReceiver.Properties">
            <summary>
            Gets the list of properties which have been retrieved.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.GetPropReceiver.ProcessNewLines(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Processes the new lines.
            </summary>
            <param name="lines">
            The lines to process.
            </param>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.InfoReceiver">
            <summary>
            Processes command line output of a <c>adb</c> shell command.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.InfoReceiver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceCommands.InfoReceiver"/> class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.InfoReceiver.Properties">
            <summary>
            Gets or sets a dictionary with the extracted properties and their corresponding values.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.InfoReceiver.PropertyParsers">
            <summary>
            Gets or sets the dictionary with all properties and their corresponding property parsers.
            A property parser extracts the property value out of a <see cref="T:System.String"/> if possible.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.InfoReceiver.GetPropertyValue(System.String)">
            <summary>
            Gets the value of the property out of the Properties dictionary. Returns null if the property is not present in the directory.
            </summary>
            <param name="propertyName">The name of the property</param>
            <returns>The received value</returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.InfoReceiver.AddPropertyParser(System.String,System.Func{System.String,System.Object})">
            <summary>
            Adds a new parser to this receiver. The parsers parses one received line and extracts the property value if possible.
            The parser should return <c>null</c> if the property value cannot be found in the line.
            </summary>
            <param name="property">The property corresponding with the parser.</param>
            <param name="parser">Function parsing one string and returning the property value if possible. </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.InfoReceiver.ProcessNewLines(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Processes the new lines, and sets version information if the line represents package information data.
            </summary>
            <param name="lines">
            The lines to process.
            </param>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.InstallReceiver">
            <summary>
            Processes output of the <c>pm install</c> command.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.InstallReceiver.UnknownError">
            <summary>
            The error message that indicates an unkown error occurred.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.InstallReceiver.SuccessOutput">
            <summary>
            The message that indicates the operation completed successfully.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.InstallReceiver.FailurePattern">
            <summary>
            A regular expression that matches output that indicates a failure.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.InstallReceiver.ErrorMessage">
            <summary>
            Gets the error message if the install was unsuccessful.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.InstallReceiver.Success">
            <summary>
            Gets a value indicating whether the install was a success.
            </summary>
            <value>
              <see langword="true"/> if success; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.InstallReceiver.ProcessNewLines(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Processes the new lines.
            </summary>
            <param name="lines">The lines.</param>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.LinuxPath">
            <summary>
            Just like System.IO.Path, except it is geared for Linux
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.LinuxPath.DirectorySeparatorChar">
            <summary>
            The directory separator character.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.LinuxPath.EscapePattern">
            <summary>
            Pattern to escape filenames for shell command consumption.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.LinuxPath.Combine(System.String[])">
            <summary>
            Combine the specified paths to form one path
            </summary>
            <param name="paths">The paths.</param>
            <returns></returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.LinuxPath.GetDirectoryName(System.String)">
            <summary>Returns the directory information for the specified path string.</summary>
            <returns>A <see cref="T:System.String"></see> containing directory information for path, or null if path denotes a root directory, is the empty string (""), or is null. Returns <see cref="F:System.String.Empty"></see> if path does not contain directory information.</returns>
            <param name="path">The path of a file or directory. </param>
            <exception cref="T:System.ArgumentException">The path parameter contains invalid characters, is empty, or contains only white spaces, or contains a wildcard character. </exception>
            <exception cref="T:System.IO.PathTooLongException">The path parameter is longer than the system-defined maximum length.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.LinuxPath.GetFileName(System.String)">
            <summary>Returns the file name and extension of the specified path string.</summary>
            <returns>A <see cref="T:System.String"></see> consisting of the characters after the last directory character in path. If the last character of path is a directory or volume separator character, this method returns <see cref="F:System.String.Empty"></see>. If path is null, this method returns null.</returns>
            <param name="path">The path string from which to obtain the file name and extension. </param>
            <exception cref="T:System.ArgumentException">path contains one or more of the invalid characters defined in <see cref="F:System.IO.Path.InvalidPathChars"></see>, or contains a wildcard character. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.LinuxPath.IsPathRooted(System.String)">
            <summary>Gets a value indicating whether the specified path string contains absolute or relative path information.</summary>
            <returns>true if path contains an absolute path; otherwise, false.</returns>
            <param name="path">The path to test. </param>
            <exception cref="T:System.ArgumentException">path contains one or more of the invalid characters defined in <see cref="F:System.IO.Path.InvalidPathChars"></see>, or contains a wildcard character. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.LinuxPath.Escape(System.String)">
            <summary>
            Returns an escaped version of the entry name.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.LinuxPath.Quote(System.String)">
            <summary>
            Quotes the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.LinuxPath.CheckInvalidPathChars(System.String)">
            <summary>
            Checks the invalid path chars.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.LinuxPath.FixupPath(System.String)">
            <summary>
            Fixups the path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.PackageManager">
            <summary>
            Allows you to get information about packages that are installed on a device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.PackageManager.TempInstallationDirectory">
            <summary>
            The path to a temporary directory to use when pushing files to the device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.PackageManager.ListFull">
            <summary>
            The command that list all packages installed on the device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.PackageManager.ListThirdPartyOnly">
            <summary>
            The command that list all third party packages installed on the device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.PackageManager.logger">
            <summary>
            The logger to use when logging messages.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.PackageManager.client">
            <summary>
            The <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> to use when communicating with the device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.PackageManager.syncServiceFactory">
            <summary>
            A function which returns a new instance of a class that implements the
            <see cref="T:AdvancedSharpAdbClient.ISyncService"/> interface, that can be used to transfer files to and from
            a given device.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageManager.#ctor(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData,System.Boolean,System.Func{AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.ISyncService},System.Boolean,Microsoft.Extensions.Logging.ILogger{AdvancedSharpAdbClient.DeviceCommands.PackageManager})">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceCommands.PackageManager"/> class.
            </summary>
            <param name="client">
            The <see cref="T:AdvancedSharpAdbClient.IAdvancedAdbClient"/> to use to communicate with the Android Debug Bridge.
            </param>
            <param name="device">
            The device on which to look for packages.
            </param>
            <param name="thirdPartyOnly">
            <see langword="true"/> to only indicate third party applications;
            <see langword="false"/> to also include built-in applications.
            </param>
            <param name="syncServiceFactory">
            A function which returns a new instance of a class that implements the
            <see cref="T:AdvancedSharpAdbClient.ISyncService"/> interface, that can be used to transfer files to and from
            a given device.
            </param>
            <param name="skipInit">
            A value indicating whether to skip the initial refresh of the package list or not. Used mainly by unit tests.
            </param>
            <param name="logger">
            The logger to use when logging.
            </param>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.PackageManager.ThirdPartyOnly">
            <summary>
            Gets a value indicating whether this package manager only lists third party
            applications, or also includes built-in applications.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.PackageManager.Packages">
            <summary>
            Gets the list of packages currently installed on the device. They key is the name of the
            package; the value the package path.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.PackageManager.Device">
            <summary>
            Gets the device.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageManager.RefreshPackages">
            <summary>
            Refreshes the packages.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageManager.InstallPackage(System.String,System.Boolean)">
            <summary>
            Installs an Android application on device.
            </summary>
            <param name="packageFilePath">
            The absolute file system path to file on local host to install.
            </param>
            <param name="reinstall">
            <see langword="true"/>if re-install of app should be performed; otherwise,
            <see langword="false"/>.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageManager.InstallRemotePackage(System.String,System.Boolean)">
            <summary>
            Installs the application package that was pushed to a temporary location on the device.
            </summary>
            <param name="remoteFilePath">absolute file path to package file on device</param>
            <param name="reinstall">set to <see langword="true"/> if re-install of app should be performed</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageManager.UninstallPackage(System.String)">
            <summary>
            Uninstalls a package from the device.
            </summary>
            <param name="packageName">
            The name of the package to uninstall.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageManager.GetVersionInfo(System.String)">
            <summary>
            Requests the version information from the device.
            </summary>
            <param name="packageName">
            The name of the package from which to get the application version.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageManager.SyncPackageToDevice(System.String)">
            <summary>
            Pushes a file to device
            </summary>
            <param name="localFilePath">the absolute path to file on local host</param>
            <returns>destination path on device for file</returns>
            <exception cref="T:System.IO.IOException">if fatal error occurred when pushing file</exception>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageManager.RemoveRemotePackage(System.String)">
            <summary>
            Remove a file from device
            </summary>
            <param name="remoteFilePath">path on device of file to remove</param>
            <exception cref="T:System.IO.IOException">if file removal failed</exception>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.PackageManagerReceiver">
            <summary>
            Parses the output of the various <c>pm</c> commands.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageManagerReceiver.#ctor(AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.DeviceCommands.PackageManager)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceCommands.PackageManagerReceiver"/> class.
            </summary>
            <param name="device">
            The device for which the package information is being received.
            </param>
            <param name="packageManager">
            The parent package manager.
            </param>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.PackageManagerReceiver.Device">
            <summary>
            Gets the device.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.PackageManagerReceiver.PackageManager">
            <summary>
            Gets the package manager.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageManagerReceiver.ProcessNewLines(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Processes the new lines.
            </summary>
            <param name="lines">The lines.</param>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.VersionInfo">
            <summary>
            Represents a version of an Android application.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.VersionInfo.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceCommands.VersionInfo"/> class.
            </summary>
            <param name="versionCode">The version code of the application.</param>
            <param name="versionName">The version name of the application</param>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.VersionInfo.VersionCode">
            <summary>
            Gets or sets the version code of an Android application
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.VersionInfo.VersionName">
            <summary>
            Gets or sets the version name of an Android application
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.VersionInfoReceiver">
            <summary>
            Processes command line output of the <c>dumpsys package</c> command.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.VersionInfoReceiver.versionCode">
            <summary>
            The name of the version code property.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.VersionInfoReceiver.versionName">
            <summary>
            The name of the version name property.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceCommands.VersionInfoReceiver.inPackagesSection">
            <summary>
            Tracks whether we're currently in the packages section or not.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.VersionInfoReceiver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceCommands.VersionInfoReceiver"/> class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceCommands.VersionInfoReceiver.VersionInfo">
            <summary>
            Gets the version code of the specified package
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.VersionInfoReceiver.GetVersionName(System.String)">
            <summary>
            Parses the given line and extracts the version name if possible.
            </summary>
            <param name="line">The line to be parsed.</param>
            <returns>The extracted version name.</returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.VersionInfoReceiver.GetVersionCode(System.String)">
            <summary>
            Parses the given line and extracts the version code if possible.
            </summary>
            <param name="line">The line to be parsed.</param>
            <returns>The extracted version code.</returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceCommands.PackageInstallationException">
            <summary>
            An exception while installing a package on the device
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageInstallationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceCommands.PackageInstallationException"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageInstallationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceCommands.PackageInstallationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageInstallationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceCommands.PackageInstallationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceCommands.PackageInstallationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
             <summary>
             Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceCommands.PackageInstallationException"/> class.
             </summary>
             <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
             <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="info"/> parameter is null.
               </exception>
            
             <exception cref="T:System.Runtime.Serialization.SerializationException">
             The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
               </exception>
        </member>
        <member name="T:AdvancedSharpAdbClient.EnvironmentVariablesReceiver">
            <summary>
            Processes the output of the <c>printenv</c> command, which dumps all environment variables of
            an Android device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.EnvironmentVariablesReceiver.PrintEnvCommand">
            <summary>
            The path to the <c>printenv</c> command.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.EnvironmentVariablesReceiver.EnvPattern">
            <summary>
            A regular expression that can be used to parse the output of the <c>printenv</c> command.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.EnvironmentVariablesReceiver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.EnvironmentVariablesReceiver"/> class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.EnvironmentVariablesReceiver.EnvironmentVariables">
            <summary>
            Gets the environment variables that are currently defined on the device.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.EnvironmentVariablesReceiver.ProcessNewLines(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Processes the new lines.
            </summary>
            <param name="lines">The lines.</param>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceData">
            <summary>
            Represents a device that is connected to the Android Debug Bridge.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceData.DeviceDataRegexString">
            <summary>
            A regular expression that can be used to parse the device information that is returned
            by the Android Debut Bridge.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceData.Regex">
            <summary>
            A regular expression that can be used to parse the device information that is returned
            by the Android Debut Bridge.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceData.Serial">
            <summary>
            Gets or sets the device serial number.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceData.State">
            <summary>
            Gets or sets the device state.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceData.Model">
            <summary>
            Gets or sets the device model name.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceData.Product">
            <summary>
            Gets or sets the device product name.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceData.Name">
            <summary>
            Gets or sets the device name.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceData.Features">
            <summary>
            Gets or sets the features available on the device.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceData.Usb">
            <summary>
            Gets or sets the USB port to which this device is connected. Usually available on Linux only.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceData.TransportId">
            <summary>
            Gets or sets the transport ID for this device.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceData.Message">
            <summary>
            Gets or sets the device info message. Currently only seen for NoPermissions state.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceData.CreateFromAdbData(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceData"/> class based on
            data retrieved from the Android Debug Bridge.
            </summary>
            <param name="data">
            The data retrieved from the Android Debug Bridge that represents a device.
            </param>
            <returns>
            A <see cref="T:AdvancedSharpAdbClient.DeviceData"/> object that represents the device.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceData.ToString">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceData.GetStateFromString(System.String)">
            <summary>
            Get the device state from the string value
            </summary>
            <param name="state">The device state string</param>
            <returns></returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceDataEventArgs">
            <summary>
            The event arguments that are passed when a device event occurs.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceDataEventArgs.#ctor(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceDataEventArgs"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceDataEventArgs.Device">
            <summary>
            Gets the device.
            </summary>
            <value>The device.</value>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceMonitor">
             <summary>
             <para>
                 A Device monitor. This connects to the Android Debug Bridge and get device and
                 debuggable process information from it.
             </para>
             </summary>
             <example>
             <para>
                 To receive notifications when devices connect to or disconnect from your PC, you can use the following code:
             </para>
             <code>
             void Test()
             {
                 var monitor = new DeviceMonitor(new AdbSocket());
                 monitor.DeviceConnected += this.OnDeviceConnected;
                 monitor.Start();
             }
            
             void OnDeviceConnected(object sender, DeviceDataEventArgs e)
             {
                 Console.WriteLine($"The device {e.Device.Name} has connected to this PC");
             }
             </code>
             </example>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceMonitor.logger">
            <summary>
            The logger to use when logging messages.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceMonitor.devices">
            <summary>
            The list of devices currently connected to the Android Debug Bridge.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceMonitor.firstDeviceListParsed">
            <summary>
            When the <see cref="M:AdvancedSharpAdbClient.DeviceMonitor.Start"/> method is called, this <see cref="T:System.Threading.ManualResetEvent"/>
            is used to block the <see cref="M:AdvancedSharpAdbClient.DeviceMonitor.Start"/> method until the <see cref="M:AdvancedSharpAdbClient.DeviceMonitor.DeviceMonitorLoopAsync(System.Threading.CancellationToken)"/>
            has processed the first list of devices.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceMonitor.monitorTaskCancellationTokenSource">
            <summary>
            A <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the <see cref="F:AdvancedSharpAdbClient.DeviceMonitor.monitorTask"/>.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceMonitor.monitorTask">
            <summary>
            The <see cref="T:System.Threading.Tasks.Task"/> that monitors the <see cref="P:AdvancedSharpAdbClient.DeviceMonitor.Socket"/> and waits for device notifications.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceMonitor.#ctor(AdvancedSharpAdbClient.IAdbSocket,Microsoft.Extensions.Logging.ILogger{AdvancedSharpAdbClient.DeviceMonitor})">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.DeviceMonitor"/> class.
            </summary>
            <param name="socket">
            The <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> that manages the connection with the adb server.
            </param>
            <param name="logger">
            The logger to use when logging.
            </param>
        </member>
        <member name="E:AdvancedSharpAdbClient.DeviceMonitor.DeviceChanged">
            <inheritdoc/>
        </member>
        <member name="E:AdvancedSharpAdbClient.DeviceMonitor.DeviceConnected">
            <inheritdoc/>
        </member>
        <member name="E:AdvancedSharpAdbClient.DeviceMonitor.DeviceDisconnected">
            <inheritdoc/>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceMonitor.Devices">
            <inheritdoc/>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceMonitor.Socket">
            <summary>
            Gets the <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> that represents the connection to the
            Android Debug Bridge.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DeviceMonitor.IsRunning">
            <summary>
            Gets a value indicating whether this instance is running.
            </summary>
            <value>
            <see langword="true"/> if this instance is running; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceMonitor.Start">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceMonitor.Dispose">
            <summary>
            Stops the monitoring
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceMonitor.OnDeviceChanged(AdvancedSharpAdbClient.DeviceDataEventArgs)">
            <summary>
            Raises the <see cref="E:AdvancedSharpAdbClient.DeviceMonitor.DeviceChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:AdvancedSharpAdbClient.DeviceDataEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceMonitor.OnDeviceConnected(AdvancedSharpAdbClient.DeviceDataEventArgs)">
            <summary>
            Raises the <see cref="E:AdvancedSharpAdbClient.DeviceMonitor.DeviceConnected"/> event.
            </summary>
            <param name="e">The <see cref="T:AdvancedSharpAdbClient.DeviceDataEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceMonitor.OnDeviceDisconnected(AdvancedSharpAdbClient.DeviceDataEventArgs)">
            <summary>
            Raises the <see cref="E:AdvancedSharpAdbClient.DeviceMonitor.DeviceDisconnected"/> event.
            </summary>
            <param name="e">The <see cref="T:AdvancedSharpAdbClient.DeviceDataEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceMonitor.DeviceMonitorLoopAsync(System.Threading.CancellationToken)">
            <summary>
            Monitors the devices. This connects to the Debug Bridge
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DeviceMonitor.ProcessIncomingDeviceData(System.String)">
            <summary>
            Processes the incoming device data.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.DeviceState">
            <summary>
            Defines the state of an Android device connected to the Android Debug Bridge.
            </summary>
            <seealso href="https://android.googlesource.com/platform/system/core/+/master/adb/adb.h"/>
            <seealso href="https://android.googlesource.com/platform/system/core/+/master/adb/transport.cpp"/>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceState.Offline">
            <summary>
            The instance is not connected to adb or is not responding.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceState.BootLoader">
            <summary>
            The device is in bootloader mode
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceState.Online">
            <summary>
            The instance is now connected to the adb server. Note that this state does not imply that the Android system is
            fully booted and operational, since the instance connects to adb while the system is still booting.
            However, after boot-up, this is the normal operational state of an emulator/device instance.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceState.Host">
            <summary>
            The device is the adb host.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceState.Recovery">
            <summary>
            The device is in recovery mode.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceState.NoPermissions">
            <summary>
            Insufficient permissions to communicate with the device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceState.Sideload">
            <summary>
            The device is in sideload mode.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceState.Unauthorized">
            <summary>
            The device is connected to adb, but adb is not authorized for remote debugging of this device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceState.Authorizing">
            <summary>
            The device is connected to adb, but adb authorizing for remote debugging of this device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.DeviceState.Unknown">
            <summary>
            The device state is unknown.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Element">
            <summary>
            Implement of screen element, likes Selenium
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Element.client">
            <summary>
            The current ADB client that manages the connection.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Element.device">
            <summary>
            The current device containing the element
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Element.cords">
            <summary>
            Contains element coordinates 
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Element.attributes">
            <summary>
            Gets or sets element attributes
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Element.#ctor(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.Cords,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Element"/> class.
            </summary>
            <param name="client"></param>
            <param name="device"></param>
            <param name="cords"></param>
            <param name="attributes"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Element.Click">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Element.SendText(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Element.ClearInput(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:AdvancedSharpAdbClient.Exceptions.AdbException">
            <summary>
            Represents an exception with communicating with ADB
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.AdbException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.AdbException"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.AdbException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.AdbException"/> class with the
            specified error message.
            </summary>
            <param name="message">
            The message that describes the error.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.AdbException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.AdbException"/> class with the
            specified client error message and adb error message.
            </summary>
            <param name="message">
            The message that describes the error on the client side.
            </param>
            <param name="adbError">
            The raw error message that was sent by adb.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.AdbException.#ctor(System.String,AdvancedSharpAdbClient.AdbResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.AdbException"/> class with the
            specified client error message and <see cref="T:AdvancedSharpAdbClient.AdbResponse"/>
            </summary>
            <param name="message">
            The message that describes the error on the client side.
            </param>
            <param name="response">
            The <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> that was sent by adb.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.AdbException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.AdbException"/> class.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.AdbException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.AdbException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:AdvancedSharpAdbClient.Exceptions.AdbException.AdbError">
            <summary>
            Gets the error message that was sent by adb.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Exceptions.AdbException.Response">
            <summary>
            Gets the response that was sent by adb.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Exceptions.AdbException.ConnectionReset">
            <summary>
            Gets a value indicating whether the underlying error was a <see cref="T:System.Net.Sockets.SocketException"/> where the
            <see cref="P:System.Net.Sockets.SocketException.SocketErrorCode"/> is set to <see cref="F:System.Net.Sockets.SocketError.ConnectionReset"/>, indicating
            that the connection was reset by the remote server. This happens when the adb server was killed.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Exceptions.CommandAbortingException">
            <summary>
            Thrown when an executed command identifies that it is being aborted.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.CommandAbortingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.CommandAbortingException"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.CommandAbortingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.CommandAbortingException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.CommandAbortingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.CommandAbortingException"/> class.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.CommandAbortingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.CommandAbortingException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:AdvancedSharpAdbClient.Exceptions.DeviceNotFoundException">
            <summary>
            Unable to connect to the device because it was not found in the list of available devices.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.DeviceNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.DeviceNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.DeviceNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.DeviceNotFoundException"/> class.
            </summary>
            <param name="device">The device.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.DeviceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.DeviceNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.DeviceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.DeviceNotFoundException"/> class.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:AdvancedSharpAdbClient.Exceptions.ElementNotFoundException">
            <summary>
            Represents an exception with Element
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.ElementNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.ElementNotFoundException"/> class.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Exceptions.InvalidKeyEventException">
            <summary>
            Represents an exception with keyevent
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.InvalidKeyEventException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.InvalidKeyEventException"/> class.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Exceptions.InvalidTextException">
            <summary>
            Represents an exception with Element
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.InvalidTextException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.InvalidTextException"/> class.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Exceptions.PermissionDeniedException">
            <summary>
            The exception that is thrown when the permission to a resource was denied.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.PermissionDeniedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.PermissionDeniedException"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.PermissionDeniedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.PermissionDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.PermissionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.PermissionDeniedException"/> class.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.PermissionDeniedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.PermissionDeniedException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException">
            <summary>
            The exception that is thrown when a shell command becomes unresponsive.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException"/> class with a
            specified error message.
            </summary>
            <param name="message">
            The message that describes the error.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException"/> class with a
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="inner">
            The exception that is the cause of the current exception, or
            <see langword="null"/> if no inner exception is specified.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException"/> class with a
            specified error message and a reference to the inner exception that is the cause
            of this exception.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="inner">
            The exception that is the cause of the current exception, or
            <see langword="null"/> if no inner exception is specified.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.ShellCommandUnresponsiveException"/> class with serialized
            data.
            </summary>
            <param name="info">
            The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the
            exception being thrown.
            </param>
            <param name="context">
            The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the
            source or destination.
            </param>
        </member>
        <member name="T:AdvancedSharpAdbClient.Exceptions.UnknownOptionException">
            <summary>
            Thrown when a command has an unknown option passed
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.UnknownOptionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.UnknownOptionException"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.UnknownOptionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.UnknownOptionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.UnknownOptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.UnknownOptionException"/> class.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Exceptions.UnknownOptionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Exceptions.UnknownOptionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:AdvancedSharpAdbClient.DateTimeHelper">
            <summary>
            Provides helper methods for working with Unix-based date formats.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.DateTimeHelper.Epoch">
            <summary>
            Gets EPOCH time
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.DateTimeHelper.ToUnixEpoch(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime"/> to the Unix equivalent.
            </summary>
            <param name="date">
            The date to convert to the Unix format.
            </param>
            <returns>
            A <see cref="T:System.Int64"/> that represents the date, in Unix format.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.Factories">
            <summary>
            Provides factory methods used by the various SharpAdbClient classes.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Factories.AdbSocketFactory">
            <summary>
            Gets or sets a delegate which creates a new instance of the <see cref="T:AdvancedSharpAdbClient.AdbSocket"/> class.
            </summary>
            <returns>
            A new instance of the <see cref="T:AdvancedSharpAdbClient.AdbSocket"/> class.
            </returns>
        </member>
        <member name="P:AdvancedSharpAdbClient.Factories.AdbClientFactory">
            <summary>
            Gets or sets a delegate that creates a new instance of the <see cref="T:AdvancedSharpAdbClient.AdvancedAdbClient"/> class.
            </summary>
            <returns>
            A new instance of the <see cref="T:AdvancedSharpAdbClient.AdvancedAdbClient"/> class.
            </returns>
        </member>
        <member name="P:AdvancedSharpAdbClient.Factories.AdbCommandLineClientFactory">
            <summary>
            Gets or sets a function that returns a new instance of a class that implements the
            <see cref="T:AdvancedSharpAdbClient.IAdbCommandLineClient"/> interface, that can be used to interact with the
            <c>adb.exe</c> command line client.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Factories.SyncServiceFactory">
            <summary>
            Gets or sets a function that returns a new instance of a class that implements the
            <see cref="T:AdvancedSharpAdbClient.ISyncService"/> interface, that can be used to transfer files to and from
            a given device.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Factories.Reset">
            <summary>
            Resets all factories to their default values.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.FileStatistics">
            <summary>
            Contains information about a file on the remote device.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FileStatistics.Path">
            <summary>
            Gets or sets the path of the file.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FileStatistics.FileMode">
            <summary>
            Gets or sets the <see cref="T:AdvancedSharpAdbClient.UnixFileMode"/> attributes of the file.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FileStatistics.Size">
            <summary>
            Gets or sets the total file size, in bytes.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FileStatistics.Time">
            <summary>
            Gets or sets the time of last modification.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.FileStatistics.ToString">
            <summary>
            Gets a <see cref="T:System.String"/> that represents the current <see cref="T:AdvancedSharpAdbClient.FileStatistics"/> object.
            </summary>
            <returns>
            The <see cref="P:AdvancedSharpAdbClient.FileStatistics.Path"/> of the current <see cref="T:AdvancedSharpAdbClient.FileStatistics"/> object.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.ForwardData">
            <summary>
            Contains information about port forwarding configured by the Android Debug Bridge.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ForwardData.SerialNumber">
            <summary>
            Gets or sets the serial number of the device for which the port forwarding is
            configured.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ForwardData.Local">
            <summary>
            Gets or sets a <see cref="T:System.String"/> that represents the local (PC) endpoint.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ForwardData.LocalSpec">
            <summary>
            Gets a <see cref="T:AdvancedSharpAdbClient.ForwardSpec"/> that represents the local (PC) endpoint.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ForwardData.Remote">
            <summary>
            Gets or sets a <see cref="T:System.String"/> that represents the remote (device) endpoint.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ForwardData.RemoteSpec">
            <summary>
            Gets a <see cref="T:AdvancedSharpAdbClient.ForwardSpec"/> that represents the remote (device) endpoint.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.ForwardData.FromString(System.String)">
            <summary>
            Creates a new instance of the <seealso cref="T:AdvancedSharpAdbClient.ForwardData"/> class by parsing
            a <see cref="T:System.String"/>.
            </summary>
            <param name="value">
            The <see cref="T:System.String"/> value to parse.
            </param>
            <returns>
            A <see cref="T:AdvancedSharpAdbClient.ForwardData"/> object that represents the port forwarding information
            contained in <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.ForwardData.ToString">
            <inheritdoc/>
        </member>
        <member name="T:AdvancedSharpAdbClient.ForwardProtocol">
            <summary>
            Represents a protocol which is being forwarded over adb.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.ForwardProtocol.Tcp">
            <summary>
            Enables the forwarding of a TCP port.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.ForwardProtocol.LocalAbstract">
            <summary>
            Enables the forwarding of a Unix domain socket.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.ForwardProtocol.LocalReserved">
            <summary>
            Enables the forwarding of a Unix domain socket.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.ForwardProtocol.LocalFilesystem">
            <summary>
            Enables the forwarding of a Unix domain socket.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.ForwardProtocol.Device">
            <summary>
            Enables the forwarding of a character device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.ForwardProtocol.JavaDebugWireProtocol">
            <summary>
            Enables port forwarding of the java debugger for a specific process.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.ForwardSpec">
            <summary>
            Represents an adb forward specification as used by the various adb port forwarding
            functions.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.ForwardSpec.Mappings">
            <summary>
            Provides a mapping between a <see cref="T:System.String"/> and a <see cref="T:AdvancedSharpAdbClient.ForwardProtocol"/>
            value, used for the <see cref="T:System.String"/> representation of the <see cref="T:AdvancedSharpAdbClient.ForwardSpec"/>
            class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ForwardSpec.Protocol">
            <summary>
            Gets or sets the protocol which is being forwarded.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ForwardSpec.Port">
            <summary>
            Gets or sets, when the <see cref="P:AdvancedSharpAdbClient.ForwardSpec.Protocol"/> is <see cref="F:AdvancedSharpAdbClient.ForwardProtocol.Tcp"/>, the port
            number of the port being forwarded.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ForwardSpec.SocketName">
            <summary>
            Gets or sets, when the <see cref="P:AdvancedSharpAdbClient.ForwardSpec.Protocol"/> is <see cref="F:AdvancedSharpAdbClient.ForwardProtocol.LocalAbstract"/>,
            <see cref="F:AdvancedSharpAdbClient.ForwardProtocol.LocalReserved"/> or <see cref="F:AdvancedSharpAdbClient.ForwardProtocol.LocalFilesystem"/>,
            the Unix domain socket name of the socket being forwarded.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ForwardSpec.ProcessId">
            <summary>
            Gets or sets, when the <see cref="P:AdvancedSharpAdbClient.ForwardSpec.Protocol"/> is <see cref="F:AdvancedSharpAdbClient.ForwardProtocol.JavaDebugWireProtocol"/>,
            the process id of the process to which the debugger is attached.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.ForwardSpec.Parse(System.String)">
            <summary>
            Creates a <see cref="T:AdvancedSharpAdbClient.ForwardSpec"/> from its <see cref="T:System.String"/> representation.
            </summary>
            <param name="spec">
            A <see cref="T:System.String"/> which represents a <see cref="T:AdvancedSharpAdbClient.ForwardSpec"/>.
            </param>
            <returns>
            A <see cref="T:AdvancedSharpAdbClient.ForwardSpec"/> which represents <paramref name="spec"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.ForwardSpec.ToString">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.ForwardSpec.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.ForwardSpec.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:AdvancedSharpAdbClient.Framebuffer">
            <summary>
            Provides access to the framebuffer (that is, a copy of the image being displayed on the device screen).
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Framebuffer.#ctor(AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.AdvancedAdbClient)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Framebuffer"/> class.
            </summary>
            <param name="device">
            The device for which to fetch the frame buffer.
            </param>
            <param name="client">
            A <see cref="T:AdvancedSharpAdbClient.AdvancedAdbClient"/> which manages the connection with adb.
            </param>
        </member>
        <member name="P:AdvancedSharpAdbClient.Framebuffer.Device">
            <summary>
            Gets the device for which to fetch the frame buffer.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Framebuffer.Header">
            <summary>
            Gets the framebuffer header. The header contains information such as the width and height and the color encoding.
            This property is set after you call <see cref="M:AdvancedSharpAdbClient.Framebuffer.RefreshAsync(System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Framebuffer.Data">
            <summary>
            Gets the framebuffer data. You need to parse the <see cref="T:AdvancedSharpAdbClient.FramebufferHeader"/> to interpret this data (such as the color encoding).
            This property is set after you call <see cref="M:AdvancedSharpAdbClient.Framebuffer.RefreshAsync(System.Threading.CancellationToken)"/>.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Framebuffer.RefreshAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously refreshes the framebuffer: fetches the latest framebuffer data from the device. Access the <see cref="P:AdvancedSharpAdbClient.Framebuffer.Header"/>
            and <see cref="P:AdvancedSharpAdbClient.Framebuffer.Data"/> properties to get the updated framebuffer data.
            </summary>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous task.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> which represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.Framebuffer.ToImage">
            <summary>
            Converts the framebuffer data to a <see cref="T:System.Drawing.Image"/>.
            </summary>
            <returns>
            An <see cref="T:System.Drawing.Image"/> which represents the framebuffer data.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.Framebuffer.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Framebuffer.EnsureNotDisposed">
            <summary>
            Throws an exception if this <see cref="T:AdvancedSharpAdbClient.Framebuffer"/> has been disposed.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.FramebufferHeader">
            <summary>
            Whenever the <c>framebuffer:</c> service is invoked, the adb server responds with the contents
            of the framebuffer, prefixed with a <see cref="T:AdvancedSharpAdbClient.FramebufferHeader"/> object that contains more
            information about the framebuffer.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FramebufferHeader.Version">
            <summary>
            Gets or sets the version of the framebuffer sturcture.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FramebufferHeader.Bpp">
            <summary>
            Gets or sets the number of bytes per pixel. Usual values include 32 or 24.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FramebufferHeader.ColorSpace">
            <summary>
            Gets or sets the color space. Only available starting with <see cref="P:AdvancedSharpAdbClient.FramebufferHeader.Version"/> 2.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FramebufferHeader.Size">
            <summary>
            Gets or sets the total size, in bits, of the framebuffer.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FramebufferHeader.Width">
            <summary>
            Gets or sets the width, in pixels, of the framebuffer.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FramebufferHeader.Height">
            <summary>
            Gets or sets the height, in pixels, of the framebuffer.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FramebufferHeader.Red">
            <summary>
            Gets or sets information about the red color channel.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FramebufferHeader.Blue">
            <summary>
            Gets or sets information about the blue color channel.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FramebufferHeader.Green">
            <summary>
            Gets or sets information about the green color channel.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.FramebufferHeader.Alpha">
            <summary>
            Gets or sets information about the alpha channel.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.FramebufferHeader.Read(System.Byte[])">
            <summary>
            Creates a new <see cref="T:AdvancedSharpAdbClient.FramebufferHeader"/> object based on a byte arra which contains the data.
            </summary>
            <param name="data">
            The data that feeds the <see cref="T:AdvancedSharpAdbClient.FramebufferHeader"/> structure.
            </param>
            <returns>
            A new <see cref="T:AdvancedSharpAdbClient.FramebufferHeader"/> object.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.FramebufferHeader.ToImage(System.Byte[])">
            <summary>
            Converts a <see cref="T:System.Byte"/> array containing the raw frame buffer data to a <see cref="T:System.Drawing.Image"/>.
            </summary>
            <param name="buffer">
            The buffer containing the image data.
            </param>
            <returns>
            A <see cref="T:System.Drawing.Image"/> that represents the image contained in the frame buffer, or <see langword="null"/> if the framebuffer
            does not contain any data. This can happen when DRM is enabled on the device.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.FramebufferHeader.StandardizePixelFormat(System.Byte[])">
            <summary>
            Returns the <see cref="T:System.Drawing.Imaging.PixelFormat"/> that describes pixel format of an image that is stored according to the information
            present in this <see cref="T:AdvancedSharpAdbClient.FramebufferHeader"/>. Because the <see cref="T:System.Drawing.Imaging.PixelFormat"/> enumeration does not allow for all
            formats supported by Android, this method also takes a <paramref name="buffer"/> and reorganizes the bytes in the buffer to
            match the return value of this function.
            </summary>
            <param name="buffer">
            A byte array in which the images are stored according to this <see cref="T:AdvancedSharpAdbClient.FramebufferHeader"/>.
            </param>
            <returns>
            A <see cref="T:System.Drawing.Imaging.PixelFormat"/> that describes how the image data is represented in this <paramref name="buffer"/>.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.IAdbCommandLineClient">
            <summary>
            Provides a common interface for any class that provides access to the
            <c>adb.exe</c> executable.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbCommandLineClient.GetVersion">
            <summary>
            Queries adb for its version number and checks it against <see cref="F:AdvancedSharpAdbClient.AdbServer.RequiredAdbVersion"/>.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbCommandLineClient.StartServer">
            <summary>
            Starts the adb server by running the <c>adb start-server</c> command.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbCommandLineClient.IsValidAdbFile(System.String)">
            <summary>
            Throws an error if the path does not point to a valid instance of <c>adb.exe</c>.
            </summary>
            <param name="adbPath">
            The path to validate.
            </param>
        </member>
        <member name="T:AdvancedSharpAdbClient.IAdbServer">
            <summary>
            Represents a common interface for any class that allows starting or stopping the Android Debug Bridge (adb)
            server/deamon.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbServer.StartServer(System.String,System.Boolean)">
            <summary>
            Starts the adb server if it was not previously running.
            </summary>
            <param name="adbPath">
            The path to the <c>adb.exe</c> executable that can be used to start the adb server.
            If this path is not provided, this method will throw an exception if the server
            is not running or is not up to date.
            </param>
            <param name="restartServerIfNewer">
            <see langword="true"/> to restart the adb server if the version of the <c>adb.exe</c>
            executable at <paramref name="adbPath"/> is newer than the version that is currently
            running; <see langword="false"/> to keep a previous version of the server running.
            </param>
            <returns>
            <list type="ordered">
            <item>
                <see cref="F:AdvancedSharpAdbClient.StartServerResult.AlreadyRunning"/> if the adb server was already
                running and the version of the adb server was at least <see cref="F:AdvancedSharpAdbClient.AdbServer.RequiredAdbVersion"/>.
            </item>
            <item>
                <see cref="F:AdvancedSharpAdbClient.StartServerResult.RestartedOutdatedDaemon"/> if the adb server
                was already running, but the version was less than <see cref="F:AdvancedSharpAdbClient.AdbServer.RequiredAdbVersion"/>
                or less than the version of the adb client at <paramref name="adbPath"/> and the
                <paramref name="restartServerIfNewer"/> flag was set.
            </item>
            <item>
            </item>
                <see cref="F:AdvancedSharpAdbClient.StartServerResult.Started"/> if the adb server was not running,
                and the server was started.
            </list>
            </returns>
            <exception cref="T:AdvancedSharpAdbClient.Exceptions.AdbException">
            The server was not running, or an outdated version of the server was running,
            and the <paramref name="adbPath"/> parameter was not specified.
            </exception>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbServer.RestartServer">
            <summary>
            Restarts the adb server if it suddenly became unavailable. Call this class if, for example,
            you receive an <see cref="T:AdvancedSharpAdbClient.Exceptions.AdbException"/> with the <see cref="P:AdvancedSharpAdbClient.Exceptions.AdbException.ConnectionReset"/> flag
            set to <see langword="true"/> - a clear indicating the ADB server died.
            </summary>
            <remarks>
            You can only call this method if you have previously started the adb server via
            <see cref="M:AdvancedSharpAdbClient.AdbServer.StartServer(System.String,System.Boolean)"/> and passed the full path to the adb server.
            </remarks>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbServer.GetStatus">
            <summary>
            Gets the status of the adb server.
            </summary>
            <returns>
            A <see cref="T:AdvancedSharpAdbClient.AdbServerStatus"/> object that describes the status of the
            adb server.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.IAdbSocket">
            <summary>
            Provides a common interface for any class that acts as a client for the
            Android Debug Bridge.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.IAdbSocket.Connected">
            <summary>
            Gets a value indicating whether the<see cref="T:AdvancedSharpAdbClient.AdbSocket"/> is connected to a remote
            host as of the latest send or receive operation.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.Reconnect">
            <summary>
            Reconnects the <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> to the same endpoint it was initially connected to.
            Use this when the socket was disconnected by adb and you have restarted adb.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.SendAdbRequest(System.String)">
            <summary>
            Sends a request to the Android Debug Bridge.To read the response, call
            <see cref="M:AdvancedSharpAdbClient.IAdbSocket.ReadAdbResponse"/>.
            </summary>
            <param name = "request" >
            The request to send.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.Send(System.Byte[],System.Int32)">
            <summary>
            Sends the specified number of bytes of data to a <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/>,
            </summary>
            <param name="data">
            A <see cref="T:System.Byte"/> array that acts as a buffer, containing the data to send.
            </param>
            <param name = "length" >
            The number of bytes to send.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.Send(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sends the specified number of bytes of data to a <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/>,
            </summary>
            <param name="data">
            A <see cref="T:System.Byte"/> array that acts as a buffer, containing the data to send.
            </param>
            <param name="offset">
            The index of the first byte in the array to send.
            </param>
            <param name = "length" >
            The number of bytes to send.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.SendSyncRequest(AdvancedSharpAdbClient.SyncCommand,System.String,System.Int32)">
            <summary>
            Sends a sync request to the device.
            </summary>
            <param name="command" >
            The command to send.
            </param>
            <param name="path">
             The path of the file on which the command should operate.
            </param>
            <param name="permissions" >
             If the command is a <see cref="F:AdvancedSharpAdbClient.SyncCommand.SEND"/> command, the permissions
             to assign to the newly created file.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.SendSyncRequest(AdvancedSharpAdbClient.SyncCommand,System.Int32)">
            <summary>
            Sends a sync request to the device.
            </summary>
            <param name="command">
            The command to send.
            </param>
            <param name="length">
            The length of the data packet that follows.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.SendSyncRequest(AdvancedSharpAdbClient.SyncCommand,System.String)">
            <summary>
            Sends a sync request to the device.
            </summary>
            <param name="command">
            The command to send.
            </param>
            <param name="path">
            The path of the file on which the command should operate.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.ReadSyncResponse">
            <summary>
            Reads the response to a sync command.
            </summary>
            <returns>
            The response that was sent by the device.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.ReadAdbResponse">
            <summary>
            Receives an <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> message, and throws an error
            if the message does not indicate success.
            </summary>
            <returns>
            A <see cref="T:AdvancedSharpAdbClient.AdbResponse"/> object that represents the response from the
            Android Debug Bridge.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.Read(System.Byte[])">
            <summary>
            Reads from the socket until the array is filled, or no more data is coming(because
            the socket closed or the timeout expired).
            </summary>
            <param name="data" >
            The buffer to store the read data into.
            </param>
            <returns>
            The total number of bytes read.
            </returns>
            <remarks>
            This uses the default time out value.
            </remarks>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.ReadAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>
            Reads a <see cref="T:System.String"/> from an <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> instance when
            the connection is in sync mode.
            </summary>
            <returns>
            The <see cref="T:System.String"/> received from the <see cref = "T:AdvancedSharpAdbClient.IAdbSocket"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.ReadAsync(System.Byte[],System.Int32,System.Threading.CancellationToken)">
            <summary>
            Receives data from a <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> into a receive buffer.
            </summary>
            <param name="data">
            An array of type <see cref="T:System.Byte"/> that is the storage location for the received data.
            </param>
            <param name="length">
            The number of bytes to receive.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the task.
            </param>
            <remarks>
            Cancelling the task will also close the socket.
            </remarks>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation. The result value of the
            task contains the number of bytes received.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.ReadString">
            <summary>
            Reads a <see cref="T:System.String"/> from an <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> instance.
            </summary>
            <returns>
            The <see cref="T:System.String"/> received from the <see cref = "T:AdvancedSharpAdbClient.IAdbSocket"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.ReadSyncString">
            <summary>
            Reads a <see cref="T:System.String"/> from an <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> instance when
            the connection is in sync mode.
            </summary>
            <returns>
            The <see cref="T:System.String"/> received from the <see cref = "T:AdvancedSharpAdbClient.IAdbSocket"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.ReadStringAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads a <see cref="T:System.String"/> from an <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> instance.
            </summary>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation. The return value
            of the task is the<see cref="T:System.String"/> received from the <see cref = "T:AdvancedSharpAdbClient.IAdbSocket"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.Read(System.Byte[],System.Int32)">
            <summary>
            Reads from the socket until the array is filled, the optional<paramref name= "length"/>
            is reached, or no more data is coming (because the socket closed or the
            timeout expired).
            </summary>
            <param name="data">
            The buffer to store the read data into.
            </param>
            <param name="length">
            The length to read or -1 to fill the data buffer completely
            </param>
            <returns>
            The total number of bytes read.
            </returns>
            <exception cref = "T:AdvancedSharpAdbClient.Exceptions.AdbException" >
            EOF
            or
            No Data to read: exception.Message
            </exception>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.GetShellStream">
            <summary>
            Gets a <see cref="T:System.IO.Stream"/> that can be used to send and receive shell output to and
            from the device.
            </summary>
            <returns>
            A <see cref="T:System.IO.Stream"/> that can be used to send and receive shell output to and
            from the device.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdbSocket.SetDevice(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Ask to switch the connection to the device/emulator identified by
            <paramref name="device"/>. After this request, every client request will
            be sent directly to the adbd daemon running on the device.
            </summary>
            <param name="socket">
            An instance of the <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> class which is connected to
            the Android Debug Bridge.
            </param>
            <param name="device">
            The device to which to connect.
            </param>
            <remarks>
            If <paramref name="device"/> is <see langword="null"/>, this method
            does nothing.
            </remarks>
        </member>
        <member name="T:AdvancedSharpAdbClient.IAdvancedAdbClient">
            <summary>
            A common interface for any class that allows you to interact with the
            adb server and devices that are connected to that adb server.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.IAdvancedAdbClient.EndPoint">
            <summary>
            Gets the <see cref="P:AdvancedSharpAdbClient.IAdvancedAdbClient.EndPoint"/> at which the Android Debug Bridge server is listening.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.GetAdbVersion">
            <summary>
            Ask the ADB server for its internal version number.
            </summary>
            <returns>
            The ADB version number.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.KillAdb">
            <summary>
            Ask the ADB server to quit immediately. This is used when the
            ADB client detects that an obsolete server is running after an
            upgrade.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.GetDevices">
            <summary>
            Gets the devices that are available for communication.
            </summary>
            <returns>
            A list of devices that are connected.
            </returns>
            <example>
            <para>
            The following example list all Android devices that are currently connected to this PC:
            </para>
            <code>
            var devices = AdbClient.Instance.GetDevices();
            
            foreach(var device in devices)
            {
                Console.WriteLine(device.Name);
            }
            </code>
            </example>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.CreateForward(AdvancedSharpAdbClient.DeviceData,System.String,System.String,System.Boolean)">
            <summary>
            Asks the ADB server to forward local connections from <paramref name="local"/>
            to the <paramref name="remote"/> address on the <paramref name="device"/>.
            </summary>
            <param name="device">
            The device to which to forward the connections.
            </param>
            <param name="local">
            <para>
            The local address to forward. This value can be in one of:
            </para>
            <list type="ordered">
              <item>
                <c>tcp:&lt;port&gt;</c>: TCP connection on localhost:&lt;port&gt;
              </item>
              <item>
                <c>local:&lt;path&gt;</c>: Unix local domain socket on &lt;path&gt;
              </item>
            </list>
            </param>
            <param name="remote">
            <para>
            The remote address to forward. This value can be in one of:
            </para>
            <list type="ordered">
              <item>
                <c>tcp:&lt;port&gt;</c>: TCP connection on localhost:&lt;port&gt; on device
              </item>
              <item>
                <c>local:&lt;path&gt;</c>: Unix local domain socket on &lt;path&gt; on device
              </item>
              <item>
                <c>jdwp:&lt;pid&gt;</c>: JDWP thread on VM process &lt;pid&gt; on device.
              </item>
            </list>
            </param>
            <param name="allowRebind">
            If set to <see langword="true"/>, the request will fail if there is already a forward
            connection from <paramref name="local"/>.
            </param>
            <returns>
            If your requested to start forwarding to local port TCP:0, the port number of the TCP port
            which has been opened. In all other cases, <c>0</c>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.CreateForward(AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.ForwardSpec,AdvancedSharpAdbClient.ForwardSpec,System.Boolean)">
            <summary>
            Asks the ADB server to forward local connections from <paramref name="local"/>
            to the <paramref name="remote"/> address on the <paramref name="device"/>.
            </summary>
            <param name="device">
            The device to which to forward the connections.
            </param>
            <param name="local">
            <para>
            The local address to forward. This value can be in one of:
            </para>
            <list type="ordered">
              <item>
                <c>tcp:&lt;port&gt;</c>: TCP connection on localhost:&lt;port&gt;
              </item>
              <item>
                <c>local:&lt;path&gt;</c>: Unix local domain socket on &lt;path&gt;
              </item>
            </list>
            </param>
            <param name="remote">
            <para>
            The remote address to forward. This value can be in one of:
            </para>
            <list type="ordered">
              <item>
                <c>tcp:&lt;port&gt;</c>: TCP connection on localhost:&lt;port&gt; on device
              </item>
              <item>
                <c>local:&lt;path&gt;</c>: Unix local domain socket on &lt;path&gt; on device
              </item>
              <item>
                <c>jdwp:&lt;pid&gt;</c>: JDWP thread on VM process &lt;pid&gt; on device.
              </item>
            </list>
            </param>
            <param name="allowRebind">
            If set to <see langword="true"/>, the request will fail if there is already a forward
            connection from <paramref name="local"/>.
            </param>
            <returns>
            If your requested to start forwarding to local port TCP:0, the port number of the TCP port
            which has been opened. In all other cases, <c>0</c>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.CreateReverseForward(AdvancedSharpAdbClient.DeviceData,System.String,System.String,System.Boolean)">
            <summary>
            Asks the ADB server to reverse forward local connections from <paramref name="remote"/>
            to the <paramref name="local"/> address on the <paramref name="device"/>.
            </summary>
            <param name="device">
            The device to which to reverse forward the connections.
            </param>
            <param name="remote">
            <para>
            The remote address to reverse forward. This value can be in one of:
            </para>
            <list type="ordered">
              <item>
                <c>tcp:&lt;port&gt;</c>: TCP connection on localhost:&lt;port&gt; on device
              </item>
              <item>
                <c>local:&lt;path&gt;</c>: Unix local domain socket on &lt;path&gt; on device
              </item>
              <item>
                <c>jdwp:&lt;pid&gt;</c>: JDWP thread on VM process &lt;pid&gt; on device.
              </item>
            </list>
            </param>
            <param name="local">
            <para>
            The local address to reverse forward. This value can be in one of:
            </para>
            <list type="ordered">
              <item>
                <c>tcp:&lt;port&gt;</c>: TCP connection on localhost:&lt;port&gt;
              </item>
              <item>
                <c>local:&lt;path&gt;</c>: Unix local domain socket on &lt;path&gt;
              </item>
            </list>
            </param>
            <param name="allowRebind">
            If set to <see langword="true"/>, the request will fail if if the specified socket is already bound through a previous reverse command.
            </param>
            <returns>
            If your requested to start reverse to remote port TCP:0, the port number of the TCP port
            which has been opened. In all other cases, <c>0</c>.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AdvancedSharpAdbClient.IAdvancedAdbClient.RemoveReverseForward(AdvancedSharpAdbClient.DeviceData,System.String)" -->
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.RemoveAllReverseForwards(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Removes all reverse forwards for a given device.
            </summary>
            <param name="device">
            The device on which to remove all reverse port forwarding
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.RemoveForward(AdvancedSharpAdbClient.DeviceData,System.Int32)">
            <summary>
            Remove a port forwarding between a local and a remote port.
            </summary>
            <param name="device">
            The device on which to remove the port forwarding.
            </param>
            <param name="localPort">
            Specification of the local port that was forwarded.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.RemoveAllForwards(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Removes all forwards for a given device.
            </summary>
            <param name="device">
            The device on which to remove the port forwarding.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.ListForward(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            List all existing forward connections from this server.
            </summary>
            <param name="device">
            The device for which to list the existing forward connections.
            </param>
            <returns>
            A <see cref="T:AdvancedSharpAdbClient.ForwardData"/> entry for each existing forward connection.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.ListReverseForward(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            List all existing reverse forward connections from this server.
            </summary>
            <param name = "device" >
            The device for which to list the existing reverse foward connections.
            </param>
            <returns>
            A<see cref="T:AdvancedSharpAdbClient.ForwardData"/> entry for each existing reverse forward connection.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.ExecuteRemoteCommandAsync(System.String,AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.IShellOutputReceiver,System.Threading.CancellationToken)">
            <summary>
            Executes a command on the device.
            </summary>
            <param name="command">
            The command to execute.
            </param>
            <param name="device">
            The device on which to run the command.
            </param>
            <param name="receiver">
            The receiver which will get the command output.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous operation.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> which represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.ExecuteRemoteCommandAsync(System.String,AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.IShellOutputReceiver,System.Text.Encoding,System.Threading.CancellationToken)">
            <summary>
            Executes a command on the device.
            </summary>
            <param name="command">
            The command to execute.
            </param>
            <param name="device">
            The device on which to run the command.
            </param>
            <param name="receiver">
            The receiver which will get the command output.
            </param>
            <param name="encoding">
            The encoding to use when parsing the command output.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous operation.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> which represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.CreateRefreshableFramebuffer(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Gets a <see cref="T:AdvancedSharpAdbClient.Framebuffer"/> which contains the framebuffer data for this device. The framebuffer data can be refreshed,
            giving you high performance access to the device's framebuffer.
            </summary>
            <param name="device">
            The device for which to get the framebuffer.
            </param>
            <returns>
            A <see cref="T:AdvancedSharpAdbClient.Framebuffer"/> object which can be used to get the framebuffer of the device.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.GetFrameBufferAsync(AdvancedSharpAdbClient.DeviceData,System.Threading.CancellationToken)">
            <summary>
            Gets the frame buffer from the specified end point.
            </summary>
            <param name="device">
            The device for which to get the framebuffer.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the asynchronous task.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> which returns the raw frame buffer.
            </returns>
            <exception cref="T:AdvancedSharpAdbClient.Exceptions.AdbException">
            failed asking for frame buffer
            </exception>
            <exception cref="T:AdvancedSharpAdbClient.Exceptions.AdbException">
            failed nudging
            </exception>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.RunLogServiceAsync(AdvancedSharpAdbClient.DeviceData,System.Action{AdvancedSharpAdbClient.Logs.LogEntry},System.Threading.CancellationToken,AdvancedSharpAdbClient.Logs.LogId[])">
            <summary>
            Asynchronously runs the event log service on a device.
            </summary>
            <param name="device">
            The device on which to run the event log service.
            </param>
            <param name="messageSink">
            A callback which will receive the event log messages as they are received.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the event log service. Use this
            to stop reading from the event log.
            </param>
            <param name="logNames">
            Optionally, the names of the logs to receive.
            </param>
            <returns>
            An <see cref="T:System.Threading.Tasks.Task"/> which represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.Reboot(System.String,AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Reboots the specified device in to the specified mode.
            </summary>
            <param name="into">
            The mode into which to reboot the device.
            </param>
            <param name="device">
            The device to reboot.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.Connect(System.Net.DnsEndPoint)">
            <summary>
            Connect to a device via TCP/IP.
            </summary>
            <param name="endpoint">
            The DNS endpoint at which the <c>adb</c> server on the device is running.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.Disconnect(System.Net.DnsEndPoint)">
            <summary>
            Disconnects a remote device from this local ADB server.
            </summary>
            <param name="endpoint">
            The endpoint of the remote device to disconnect.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.Root(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Restarts the ADB daemon running on the device with root privileges.
            </summary>
            <param name="device">
            The device on which to restart ADB with root privileges.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.Unroot(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Restarts the ADB daemon running on the device without root privileges.
            </summary>
            <param name="device">
            The device on which to restart ADB without root privileges.
            </param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:AdvancedSharpAdbClient.IAdvancedAdbClient.Install(AdvancedSharpAdbClient.DeviceData,System.IO.Stream,System.String[])" -->
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.GetFeatureSet(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Lists all features supported by the current device.
            </summary>
            <param name="device">
            The device for which to get the list of features supported.
            </param>
            <returns>
            A list of all features supported by the current device.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.DumpScreen(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Gets the current device screen snapshot
            </summary>
            <param name="device"></param>
            <returns>
            Xml containing current hierarchy
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.Click(AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.Cords)">
            <summary>
            Clicks on the specified coordinates
            </summary>
            <param name="device"></param>
            <param name="cords"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.Click(AdvancedSharpAdbClient.DeviceData,System.Int32,System.Int32)">
            <summary>
            Clicks on the specified coordinates
            </summary>
            <param name="device"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.Swipe(AdvancedSharpAdbClient.DeviceData,AdvancedSharpAdbClient.Element,AdvancedSharpAdbClient.Element,System.Int64)">
            <summary>
            Generates a swipe gesture from first element to second element
            Specify the speed in ms
            </summary>
            <param name="device"></param>
            <param name="first"></param>
            <param name="second"></param>
            <param name="speed"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.Swipe(AdvancedSharpAdbClient.DeviceData,System.Int32,System.Int32,System.Int32,System.Int32,System.Int64)">
            <summary>
            Generates a swipe gesture from co-ordinates x1,y1 to x2,y2 with speed
            Specify the speed in ms
            </summary>
            <param name="device"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="speed"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.FindElement(AdvancedSharpAdbClient.DeviceData,System.String,System.TimeSpan)">
            <summary>
            Get element by xpath
            You can specify the waiting time in timeout
            </summary>
            <param name="device"></param>
            <param name="xpath"></param>
            <param name="timeout"></param>
            <returns>
            The <see cref="T:AdvancedSharpAdbClient.Element"/> class
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.FindElements(AdvancedSharpAdbClient.DeviceData,System.String,System.TimeSpan)">
            <summary>
            Get elements by xpath
            You can specify the waiting time in timeout
            </summary>
            <param name="device"></param>
            <param name="xpath"></param>
            <param name="timeout"></param>
            <returns>
            The <see cref="T:AdvancedSharpAdbClient.Element"/> class
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.SendKeyEvent(AdvancedSharpAdbClient.DeviceData,System.String)">
            <summary>
            Send keyevent to specific
            You can see keyevents here https://developer.android.com/reference/android/view/KeyEvent
            </summary>
            <param name="device"></param>
            <param name="key"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.SendText(AdvancedSharpAdbClient.DeviceData,System.String)">
            <summary>
            Send text to device
            Doesn't support Russian
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.ClearInput(AdvancedSharpAdbClient.DeviceData,System.Int32)">
            <summary>
            Clear the input text
            The input should be in focus
            Use el.ClearInput() if the element isn't focused
            </summary>
            <param name="device"></param>
            <param name="charcount"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.StartApp(AdvancedSharpAdbClient.DeviceData,System.String)">
            <summary>
            Start an Android application on device.
            </summary>
            <param name="device"></param>
            <param name="packagename"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.StopApp(AdvancedSharpAdbClient.DeviceData,System.String)">
            <summary>
            Stop an Android application on device.
            </summary>
            <param name="device"></param>
            <param name="packagename"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.BackBtn(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Click BACK button
            </summary>
            <param name="device"></param>
        </member>
        <member name="M:AdvancedSharpAdbClient.IAdvancedAdbClient.HomeBtn(AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Click HOME button
            </summary>
            <param name="device"></param>
        </member>
        <member name="T:AdvancedSharpAdbClient.IDeviceMonitor">
            <summary>
            Provides a common interface for any class that allows you to monitor the list of
            devices that are currently connected to the adb server.
            </summary>
        </member>
        <member name="E:AdvancedSharpAdbClient.IDeviceMonitor.DeviceChanged">
            <summary>
            Occurs when the status of one of the connected devices has changed.
            </summary>
        </member>
        <member name="E:AdvancedSharpAdbClient.IDeviceMonitor.DeviceConnected">
            <summary>
            Occurs when a device has connected to the Android Debug Bridge.
            </summary>
        </member>
        <member name="E:AdvancedSharpAdbClient.IDeviceMonitor.DeviceDisconnected">
            <summary>
            Occurs when a device has disconnected from the Android Debug Bridge.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.IDeviceMonitor.Devices">
            <summary>
            Gets the devices that are currently connected to the Android Debug Bridge.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IDeviceMonitor.Start">
            <summary>
            Starts the monitoring.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.ISyncService">
            <summary>
            Interface containing methods for file synchronisation.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ISyncService.IsOpen">
            <summary>
            Gets a value indicating whether this instance is open.
            </summary>
            <value>
            <see langword="true"/> if this instance is open; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="M:AdvancedSharpAdbClient.ISyncService.Push(System.IO.Stream,System.String,System.Int32,System.DateTimeOffset,System.IProgress{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Pushes (uploads) a file to the remote device.
            </summary>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> that contains the contents of the file.
            </param>
            <param name="remotePath">
            The path, on the device, to which to push the file.
            </param>
            <param name="permissions">
            The permission octet that contains the permissions of the newly created file on the device.
            </param>
            <param name="timestamp">
            The time at which the file was last modified.
            </param>
            <param name="progress">
            An optional parameter which, when specified, returns progress notifications. The progress is reported as a value
            between 0 and 100, representing the percentage of the file which has been transferred.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the task.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.ISyncService.Pull(System.String,System.IO.Stream,System.IProgress{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Pulls (downloads) a file from the remote device.
            </summary>
            <param name="remotePath">
            The path, on the device, of the file to pull.
            </param>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> that will receive the contents of the file.
            </param>
            <param name="progress">
            An optional parameter which, when specified, returns progress notifications. The progress is reported as a value
            between 0 and 100, representing the percentage of the file which has been transferred.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> that can be used to cancel the task.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.ISyncService.Stat(System.String)">
            <summary>
            Returns information about a file on the device.
            </summary>
            <param name="remotePath">
            The path of the file on the device.
            </param>
            <returns>
            A <see cref="T:AdvancedSharpAdbClient.FileStatistics"/> object that contains information about the file.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.ISyncService.GetDirectoryListing(System.String)">
            <summary>
            Lists the contents of a directory on the device.
            </summary>
            <param name="remotePath">
            The path to the directory on the device.
            </param>
            <returns>
            For each child item of the directory, a <see cref="T:AdvancedSharpAdbClient.FileStatistics"/> object
            with information of the item.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.ISyncService.Open">
            <summary>
            Opens this connection.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.ITcpSocket">
            <summary>
            Provides an interface that allows access to the standard .NET <see cref="T:System.Net.Sockets.Socket"/>
            class. The main purpose of this interface is to enable mocking of the <see cref="T:System.Net.Sockets.Socket"/>
            in unit test scenarios.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ITcpSocket.Connected">
            <summary>
            Gets a value indicating whether a <see cref="T:AdvancedSharpAdbClient.ITcpSocket"/> is connected to a remote host as of the last
            <see cref="M:AdvancedSharpAdbClient.ITcpSocket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)"/> or <see cref="M:AdvancedSharpAdbClient.ITcpSocket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)"/> operation.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.ITcpSocket.ReceiveBufferSize">
            <summary>
            Gets or sets a value that specifies the size of the receive buffer of the <see cref="T:AdvancedSharpAdbClient.ITcpSocket"/>.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.ITcpSocket.Connect(System.Net.EndPoint)">
            <summary>
            Establishes a connection to a remote host.
            </summary>
            <param name="endPoint">
            An <see cref="T:System.Net.EndPoint"/> that represents the remote device.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.ITcpSocket.Reconnect">
            <summary>
            Re-establishes the connection to a remote host. Assumes you have resolved the reason that caused the
            socket to disconnect.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.ITcpSocket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
            <summary>
            Sends the specified number of bytes of data to a connected
            <see cref="T:AdvancedSharpAdbClient.ITcpSocket"/>, starting at the specified <paramref name="offset"/>,
            and using the specified <paramref name="socketFlags"/>.
            </summary>
            <param name="buffer">
            An array of type Byte that contains the data to be sent.
            </param>
            <param name="offset">
            The position in the data buffer at which to begin sending data.
            </param>
            <param name="size">
            The number of bytes to send.
            </param>
            <param name="socketFlags">
            A bitwise combination of the SocketFlags values.
            </param>
            <returns>
            The number of bytes sent to the Socket.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.ITcpSocket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
            <summary>
            Receives the specified number of bytes from a bound <see cref="T:AdvancedSharpAdbClient.ITcpSocket"/> into the specified offset position of the
            receive buffer, using the specified SocketFlags.
            </summary>
            <param name="buffer">
            An array of type Byte that is the storage location for received data.
            </param>
            <param name="size">
            The number of bytes to receive.
            </param>
            <param name="socketFlags">
            A bitwise combination of the SocketFlags values.
            </param>
            <returns>
            The number of bytes received.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.ITcpSocket.ReceiveAsync(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
            <summary>
            Receives the specified number of bytes from a bound <see cref="T:AdvancedSharpAdbClient.ITcpSocket"/> into the specified offset position of the
            receive buffer, using the specified SocketFlags.
            </summary>
            <param name="buffer">
            An array of type Byte that is the storage location for received data.
            </param>
            <param name="offset">
            The location in buffer to store the received data.
            </param>
            <param name="size">
            The number of bytes to receive.
            </param>
            <param name="socketFlags">
            A bitwise combination of the SocketFlags values.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous task.
            </param>
            <remarks>
            Cancelling the task will also close the socket.
            </remarks>
            <returns>
            The number of bytes received.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.ITcpSocket.GetStream">
            <summary>
            Gets the underlying <see cref="T:System.IO.Stream"/>.
            </summary>
            <returns>
            The underlying stream.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.Logs.AndroidLogEntry">
            <summary>
            Represents a standard Android log entry (an entry in any Android log buffer
            except the Event buffer).
            </summary>
            <seealso href="https://android.googlesource.com/platform/system/core/+/master/liblog/logprint.c#442"/>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.AndroidLogEntry.PriorityFormatters">
            <summary>
            Maps Android log priorities to chars used to represent them in the system log.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.AndroidLogEntry.#cctor">
            <summary>
            Initializes static members of the <see cref="T:AdvancedSharpAdbClient.Logs.AndroidLogEntry"/> class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.AndroidLogEntry.Priority">
            <summary>
            Gets or sets the priority of the log message.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.AndroidLogEntry.Tag">
            <summary>
            Gets or sets the log tag of the message. Used to identify the source of a log message.
            It usually identifies the class or activity where the log call occured.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.AndroidLogEntry.Message">
            <summary>
            Gets or sets the message that has been logged.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.AndroidLogEntry.ToString">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.AndroidLogEntry.FormatPriority(AdvancedSharpAdbClient.Logs.Priority)">
            <summary>
            Converts a <see cref="P:AdvancedSharpAdbClient.Logs.AndroidLogEntry.Priority"/> value to a char that represents that value in the system log.
            </summary>
            <param name="value">
            The value to convert.
            </param>
            <returns>
            A <see cref="T:System.Char"/> that represents <paramref name="value"/> in the sysem log.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.Logs.EventLogEntry">
            <summary>
            Represents an entry in event buffer of the the Android log.
            </summary>
            <seealso href="https://android.googlesource.com/platform/system/core/+/master/include/log/log.h#482"/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.EventLogEntry.#ctor">
            <summary>
            Initializes a new instance of the <seealso cref="T:AdvancedSharpAdbClient.Logs.EventLogEntry"/> class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.EventLogEntry.Tag">
            <summary>
            Gets or sets the 4 bytes integer key from "/system/etc/event-log-tags" file.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.EventLogEntry.Values">
            <summary>
            Gets or sets the values of this event log entry.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Logs.EventLogType">
            <summary>
            Represents the different types of values that can be stored in an event log entry.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.EventLogType.Integer">
            <summary>
            The value is a four-byte signed integer.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.EventLogType.Long">
            <summary>
            The value is an eight-byte signed integer.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.EventLogType.String">
            <summary>
            The value is a string.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.EventLogType.List">
            <summary>
            The value is a list of values.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.EventLogType.Float">
            <summary>
            The value is a four-byte signed floating number.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Logs.LogEntry">
            <summary>
            The userspace structure for version 1 of the logger_entry ABI.
            This structure is returned to userspace by the kernel logger
            driver unless an upgrade to a newer ABI version is requested.
            </summary>
            <seealso href="https://android.googlesource.com/platform/system/core/+/master/include/log/logger.h"/>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.LogEntry.ProcessId">
            <summary>
            Gets or sets the process ID of the code that generated the log message.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.LogEntry.ThreadId">
            <summary>
            Gets or sets the thread ID of the code that generated the log message.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.LogEntry.TimeStamp">
            <summary>
            Gets or sets the date and time at which the message was logged.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.LogEntry.Id">
            <summary>
            Gets or sets the log id (v3) of the payload effective UID of logger (v2);
            this value is not available for v1 entries.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.LogEntry.Data">
            <summary>
            Gets or sets the entry's payload
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Logs.LogId">
            <summary>
            Identifies the various Android log buffers.
            </summary>
            <seealso href="https://android.googlesource.com/platform/system/core/+/master/include/log/log.h#596"/>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.LogId.Main">
            <summary>
            The main log buffer
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.LogId.Radio">
            <summary>
            The buffer that contains radio/telephony related messages.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.LogId.Events">
            <summary>
            The buffer containing events-related messages.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.LogId.System">
            <summary>
            The Android system log buffer.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.LogId.Crash">
            <summary>
            The Android crash log buffer.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.LogId.Kernel">
            <summary>
            The Android kernel log buffer.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Logs.LogReader">
            <summary>
            Processes Android log files in binary format. You usually get the binary format by
            running <c>logcat -B</c>.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.LogReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.Logs.LogReader"/> class.
            </summary>
            <param name="stream">
            A <see cref="T:System.IO.Stream"/> that contains the logcat data.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.LogReader.ReadEntry(System.Threading.CancellationToken)">
            <summary>
            Reads the next <see cref="T:AdvancedSharpAdbClient.Logs.LogEntry"/> from the stream.
            </summary>
            <returns>
            A new <see cref="T:AdvancedSharpAdbClient.Logs.LogEntry"/> object.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.Logs.NamespaceDoc">
            <summary>
            The classes in this namespace provide access to the Android system log.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Logs.Priority">
            <summary>
            Represents a log priority.
            </summary>
            <seealso href="https://developer.android.com/reference/android/util/Log.html#ASSERT"/>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.Priority.Verbose">
            <summary>
            Represents a verbose message.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.Priority.Debug">
            <summary>
            Represents a debug message.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.Priority.Info">
            <summary>
            Represents an informational message.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.Priority.Warn">
            <summary>
            Reprents a warning.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.Priority.Error">
            <summary>
            Represents an error.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.Logs.Priority.Assert">
            <summary>
            Represents an assertion which failed.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Logs.ShellStream">
            <summary>
            <para>
            Represents a <see cref="T:System.IO.Stream"/> that wraps around an inner <see cref="T:System.IO.Stream"/> that contains
            output from an Android shell command. In the shell output, the LF character is replaced by a
            CR LF character. This stream undoes that change.
            </para>
            </summary>
            <seealso href="http://stackoverflow.com/questions/13578416/read-binary-stdout-data-from-adb-shell"/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.ShellStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <seealso cref="T:AdvancedSharpAdbClient.Logs.ShellStream"/> class.
            </summary>
            <param name="inner">
            The inner stream that contains the raw data retrieved from the shell. This stream
            must be readable.
            </param>
            <param name="closeStream">
            <see langword="true"/> if the <see cref="T:AdvancedSharpAdbClient.Logs.ShellStream"/> should close the <paramref name="inner"/>
            stream when closed; otherwise, <see langword="false"/>.
            </param>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.ShellStream.Inner">
            <summary>
            Gets the inner stream from which data is being read.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.ShellStream.CanRead">
            <inheritdoc/>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.ShellStream.CanSeek">
            <inheritdoc/>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.ShellStream.CanWrite">
            <inheritdoc/>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.ShellStream.Length">
            <inheritdoc/>
        </member>
        <member name="P:AdvancedSharpAdbClient.Logs.ShellStream.Position">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.ShellStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.ShellStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.ShellStream.Flush">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.ShellStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.ShellStream.SetLength(System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.ShellStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.Logs.ShellStream.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:AdvancedSharpAdbClient.NamespaceDoc">
             <summary>
             <para>
                 SharpAdbClient is a .NET library that allows.NET applications to communicate with Android devices.
                 It provides a.NET implementation of the <c>adb</c> protocol, giving more flexibility to the developer than launching an
                 <c>adb.exe</c> process and parsing the console output.
             </para>
            
             <para>
                 Most of the adb functionality is exposed through the <see cref="T:AdvancedSharpAdbClient.AdvancedAdbClient"/> class.
                 You can create your own instance of that class, or just use the instance we provide for you at
                 <see cref="!:AdvancedSharpAdbClient.AdvancedAdbClient.Instance"/>
             </para>
            
             <para>
                 To send and receive files to and from Android devices, you can use the <see cref="T:AdvancedSharpAdbClient.SyncService"/> class.
             </para>
            
             <para>
                 To be notified when Android devices connect to or disconnect from your PC, you can use the <see cref="T:AdvancedSharpAdbClient.DeviceMonitor"/>
                 class.
             </para>
             </summary>
            
             <example>
             <para>
                 To list all Android devices that are connected to your PC, you can use the following code:
             </para>
            
             <code>
             var devices = devices = AdbClient.Instance.GetDevices();
            
             foreach(var device in devices)
             {
                 Console.WriteLine(device.Name
             }
             </code>
             </example>
        </member>
        <member name="T:AdvancedSharpAdbClient.ConsoleOutputReceiver">
            <summary>
            Recieves console output, and makes the console output available as a <see cref="T:System.String"/>. To
            fetch the console output that was received, used the <see cref="M:AdvancedSharpAdbClient.ConsoleOutputReceiver.ToString"/> method.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.ConsoleOutputReceiver.logger">
            <summary>
            The logger to use when logging messages.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.ConsoleOutputReceiver.output">
            <summary>
            A <see cref="T:System.Text.StringBuilder"/> which receives all output from the device.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.ConsoleOutputReceiver.#ctor(Microsoft.Extensions.Logging.ILogger{AdvancedSharpAdbClient.ConsoleOutputReceiver})">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.ConsoleOutputReceiver"/> class.
            </summary>
            <param name="logger">
            The logger to use when logging.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.ConsoleOutputReceiver.ToString">
            <summary>
            Gets a <see cref="T:System.String"/> that represents the current <see cref="T:AdvancedSharpAdbClient.ConsoleOutputReceiver"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:AdvancedSharpAdbClient.ConsoleOutputReceiver"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.ConsoleOutputReceiver.ThrowOnError(System.String)">
            <summary>
            Throws an error message if the console output line contains an error message.
            </summary>
            <param name="line">
            The line to inspect.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.ConsoleOutputReceiver.ProcessNewLines(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Processes the new lines.
            </summary>
            <param name="lines">The lines.</param>
        </member>
        <member name="T:AdvancedSharpAdbClient.IShellOutputReceiver">
             <summary>
            
             </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.IShellOutputReceiver.ParsesErrors">
            <summary>
            Gets a value indicating whether the receiver parses error messages.
            </summary>
            <value>
                <see langword="true"/> if this receiver parsers error messages; otherwise <see langword="false"/>.
            </value>
            <remarks>
            The default value is <see langword="false"/>. If set to <see langword="false"/>, the <see cref="T:AdvancedSharpAdbClient.AdvancedAdbClient"/>
            will detect common error messages and throw an exception.
            </remarks>
        </member>
        <member name="M:AdvancedSharpAdbClient.IShellOutputReceiver.AddOutput(System.String)">
            <summary>
            Adds the output.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.IShellOutputReceiver.Flush">
            <summary>
            Flushes the output.
            </summary>
            <remarks>This should always be called at the end of the "process" in order to indicate that the data is ready to be processed further if needed.</remarks>
        </member>
        <member name="T:AdvancedSharpAdbClient.MultiLineReceiver">
             <summary>
            
             </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.MultiLineReceiver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.MultiLineReceiver"/> class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.MultiLineReceiver.TrimLines">
            <summary>
            Gets or sets a value indicating whether [trim lines].
            </summary>
            <value><see langword="true"/> if [trim lines]; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:AdvancedSharpAdbClient.MultiLineReceiver.ParsesErrors">
            <summary>
            Gets or sets a value indicating whether the receiver parses error messages.
            </summary>
            <value>
                <see langword="true"/> if this receiver parsers error messages; otherwise <see langword="false"/>.
            </value>
            <remarks>
            The default value is <see langword="false"/>. If set to <see langword="false"/>, the <see cref="T:AdvancedSharpAdbClient.AdvancedAdbClient"/>
            will detect common error messages and throw an exception.
            </remarks>
        </member>
        <member name="P:AdvancedSharpAdbClient.MultiLineReceiver.Lines">
            <summary>
            Gets or sets the lines.
            </summary>
            <value>The lines.</value>
        </member>
        <member name="M:AdvancedSharpAdbClient.MultiLineReceiver.AddOutput(System.String)">
            <summary>
            Adds a line to the output.
            </summary>
            <param name="line">
            The line to add to the output.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.MultiLineReceiver.Flush">
            <summary>
            Flushes the output.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.MultiLineReceiver.Done">
            <summary>
            Finishes the receiver
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.MultiLineReceiver.ProcessNewLines(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Processes the new lines.
            </summary>
            <param name="lines">The lines.</param>
        </member>
        <member name="T:AdvancedSharpAdbClient.Receivers.NamespaceDoc">
            <summary>
            <para>
                This namespace contains various receivers that are able to parse Android console output. You can use
                the receivers in combination with the <see cref="!:AdvancedAdbClient.ExecuteRemoteCommandAsync(string, DeviceData, IShellOutputReceiver, CancellationToken, int)"/>
                method to capture the output of any Android command.
            </para>
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.Receivers.ProcessOutputReceiver">
            <summary>
            Parses the output of a <c>cat /proc/[pid]/stat</c> command.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.Receivers.ProcessOutputReceiver.Processes">
            <summary>
            Gets a list of all processes that have been received.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.Receivers.ProcessOutputReceiver.ProcessNewLines(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="T:AdvancedSharpAdbClient.SocketExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Net.Sockets.Socket"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.SocketExtensions.ReceiveAsync(System.Net.Sockets.Socket,System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
            <summary>
            Asynchronously receives data from a connected socket.
            </summary>
            <param name="socket">
            The socket from which to read data.
            </param>
            <param name="buffer">
            An array of type <see cref="T:System.Byte"/> that is the storage location for
            the received data.
            </param>
            <param name="offset">
            The zero-based position in the <paramref name="buffer"/> parameter at which to
            start storing data.
            </param>
            <param name="size">
            The number of bytes to receive.
            </param>
            <param name="socketFlags">
            A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags"/> values.
            </param>
            <param name="cancellationToken">
            A <see cref="T:System.Threading.CancellationToken"/> which can be used to cancel the asynchronous task.
            </param>
            <remarks>
            Cancelling the task will also close the socket.
            </remarks>
            <returns>
            The number of bytes received.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.StartServerResult">
            <summary>
            Gives information about a <see cref="M:AdvancedSharpAdbClient.AdbServer.StartServer(System.String,System.Boolean)"/>
            operation.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.StartServerResult.AlreadyRunning">
            <summary>
            The adb server was already running. The server was not restarted.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.StartServerResult.RestartedOutdatedDaemon">
            <summary>
            The adb server was running, but was running an outdated version of adb.
            The server was stopped and a newer version of the server was started.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.StartServerResult.Started">
            <summary>
            The adb server was not running, and a new instance of the adb server
            was started.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.SyncCommand">
            <summary>
            Defines a command that can be sent to, or a response that can be received from,
            the sync service.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncCommand.LIST">
            <summary>
            List the files in a folder.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncCommand.RECV">
            <summary>
            Retrieve a file from device
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncCommand.SEND">
            <summary>
            Send a file to device
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncCommand.STAT">
            <summary>
            Stat a file
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncCommand.DENT">
            <summary>
            A directory entry.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncCommand.FAIL">
            <summary>
            The operation has failed.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncCommand.DATA">
            <summary>
            Marks the start of a data packet.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncCommand.OKAY">
            <summary>
            The server has acknowledged the request.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncCommand.DONE">
            <summary>
            The operation has completed.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.SyncCommandConverter">
            <summary>
            Converts <see cref="T:AdvancedSharpAdbClient.SyncCommand"/> values to their binary representation
            and vice versa.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncCommandConverter.Values">
            <summary>
            Maps the <see cref="T:AdvancedSharpAdbClient.SyncCommand"/> values to their string representations.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncCommandConverter.#cctor">
            <summary>
            Initializes static members of the <see cref="T:AdvancedSharpAdbClient.SyncCommandConverter"/> class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncCommandConverter.GetBytes(AdvancedSharpAdbClient.SyncCommand)">
            <summary>
            Gets the byte array that represents the <see cref="T:AdvancedSharpAdbClient.SyncCommand"/>.
            </summary>
            <param name="command">
            The <see cref="T:AdvancedSharpAdbClient.SyncCommand"/> to convert.
            </param>
            <returns>
            A byte array that represents the <see cref="T:AdvancedSharpAdbClient.SyncCommand"/>.
            </returns>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncCommandConverter.GetCommand(System.Byte[])">
            <summary>
            Determines which <see cref="T:AdvancedSharpAdbClient.SyncCommand"/> is represented by this byte array.
            </summary>
            <param name="value">
            A byte array that represents a <see cref="T:AdvancedSharpAdbClient.SyncCommand"/>.
            </param>
            <returns>
            The corresponding <see cref="T:AdvancedSharpAdbClient.SyncCommand"/>.
            </returns>
        </member>
        <member name="T:AdvancedSharpAdbClient.SyncService">
             <summary>
             <para>
                 Provides access to the sync service running on the Android device. Allows you to
                 list, download and upload files on the device.
             </para>
             </summary>
             <example>
             <para>
                 To send files to or receive files from your Android device, you can use the following code:
             </para>
             <code>
             void DownloadFile()
             {
                 var device = AdbClient.Instance.GetDevices().First();
            
                 using (SyncService service = new SyncService(new AdbSocket(), device))
                 using (Stream stream = File.OpenWrite(@"C:\MyFile.txt"))
                 {
                     service.Pull("/data/MyFile.txt", stream, null, CancellationToken.None);
                 }
             }
            
                 void UploadFile()
             {
                 var device = AdbClient.Instance.GetDevices().First();
            
                 using (SyncService service = new SyncService(new AdbSocket(), device))
                 using (Stream stream = File.OpenRead(@"C:\MyFile.txt"))
                 {
                     service.Push(stream, "/data/MyFile.txt", null, CancellationToken.None);
                 }
             }
             </code>
             </example>
        </member>
        <member name="F:AdvancedSharpAdbClient.SyncService.MaxPathLength">
            <summary>
            The maximum length of a path on the remote device.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncService.#ctor(AdvancedSharpAdbClient.IAdvancedAdbClient,AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.SyncService"/> class.
            </summary>
            <param name="client">
            A connection to an adb server.
            </param>
            <param name="device">
            The device on which to interact with the files.
            </param>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncService.#ctor(AdvancedSharpAdbClient.IAdbSocket,AdvancedSharpAdbClient.DeviceData)">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.SyncService"/> class.
            </summary>
            <param name="socket">
            A <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> that enables to connection with the
            adb server.
            </param>
            <param name="device">
            The device on which to interact with the files.
            </param>
        </member>
        <member name="P:AdvancedSharpAdbClient.SyncService.MaxBufferSize">
            <summary>
            Gets or sets the maximum size of data to transfer between the device and the PC
            in one block.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.SyncService.Device">
            <summary>
            Gets the device on which the file operations are being executed.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.SyncService.Socket">
            <summary>
            Gets the <see cref="T:AdvancedSharpAdbClient.IAdbSocket"/> that enables the connection with the
            adb server.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.SyncService.IsOpen">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncService.Open">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncService.Push(System.IO.Stream,System.String,System.Int32,System.DateTimeOffset,System.IProgress{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncService.Pull(System.String,System.IO.Stream,System.IProgress{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncService.Stat(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncService.GetDirectoryListing(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.SyncService.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.TcpSocket">
            <summary>
            Implements the <see cref="T:AdvancedSharpAdbClient.ITcpSocket" /> interface using the standard <see cref="T:System.Net.Sockets.Socket"/>
            class.
            </summary>
        </member>
        <member name="M:AdvancedSharpAdbClient.TcpSocket.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AdvancedSharpAdbClient.TcpSocket"/> class.
            </summary>
        </member>
        <member name="P:AdvancedSharpAdbClient.TcpSocket.Connected">
            <inheritdoc/>
        </member>
        <member name="P:AdvancedSharpAdbClient.TcpSocket.ReceiveBufferSize">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.TcpSocket.Connect(System.Net.EndPoint)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.TcpSocket.Reconnect">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.TcpSocket.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.TcpSocket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.TcpSocket.GetStream">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.TcpSocket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
            <inheritdoc/>
        </member>
        <member name="M:AdvancedSharpAdbClient.TcpSocket.ReceiveAsync(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:AdvancedSharpAdbClient.TransportType">
            <summary>
            Specifies the transport type used between the device and the Android Debug Bridge server.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.TransportType.Usb">
            <summary>
            The device is connected through USB
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.TransportType.Local">
            <summary>
            The device is connected through a local TCP connection.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.TransportType.Any">
            <summary>
            The device is connected through any transport type.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.TransportType.Host">
            <summary>
            The device is connected through the host transport type.
            </summary>
        </member>
        <member name="T:AdvancedSharpAdbClient.UnixFileMode">
            <summary>
            Describes the properties of a file on an Android device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.UnixFileMode.TypeMask">
            <summary>
            The mask that can be used to retrieve the file type from
            a <see cref="T:AdvancedSharpAdbClient.UnixFileMode"/>.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.UnixFileMode.Socket">
            <summary>
            The file is a Unix socket.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.UnixFileMode.SymbolicLink">
            <summary>
            The file is a symbolic link.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.UnixFileMode.Regular">
            <summary>
            The file is a regular file.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.UnixFileMode.Block">
            <summary>
            The file is a block device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.UnixFileMode.Directory">
            <summary>
            The file is a directory.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.UnixFileMode.Character">
            <summary>
            The file is a character device.
            </summary>
        </member>
        <member name="F:AdvancedSharpAdbClient.UnixFileMode.FIFO">
            <summary>
            The file is a first-in first-out queue.
            </summary>
        </member>
    </members>
</doc>
